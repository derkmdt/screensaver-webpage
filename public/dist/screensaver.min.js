function loadData(i,e,a){jQuery(".backdrop."+i).addClass("visible"),$.ajax({url:e,type:"GET",success:function(e){if(void 0===e.errors||e.errors.length<1){var t,n=8e3;-1!=a.feed.indexOf("price")||-1!=a.feed.indexOf("sales")?t=e.products:-1!=a.feed.indexOf("reclames")?(t=e,n=0):t=-1!=a.feed.indexOf("nos")?e:processTweets(e),jQuery(".backdrop."+i+" .tw").addClass("animation"),jQuery(".backdrop."+i+" .tw").one("webkitAnimationEnd oanimationend msAnimationEnd animationend",function(e){APP.Store.start(t),APP.Slideshow=new APP.Views.Slideshow({el:$(".template-holder"),templateName:"#"+i+"-template",collection:new APP.Store.getSlideCollection,timeSet:n,handle:i}),$(".backdrop."+i).removeClass("visible")})}else $(".post .message .text-message").text("Response error")},error:function(e){$(".post .message .text-message").text("Request error")}})}function Swipe(n,r){"use strict";function t(){}var o=function(e){setTimeout(e||t,0)},s={addEventListener:!!window.addEventListener,touch:"ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch,transitions:function(e){var t=["transitionProperty","WebkitTransition","MozTransition","OTransition","msTransition"];for(var n in t)if(void 0!==e.style[t[n]])return!0;return!1}(document.createElement("swipe"))};if(n){var l,c,d,i,u=n.children[0];r=r||{};var h=parseInt(r.startSlide,10)||0,p=r.speed||300;r.continuous=void 0===r.continuous||r.continuous;var e,f,g=r.auto||0,m={},v={},w={handleEvent:function(e){switch(e.type){case"touchstart":this.start(e);break;case"touchmove":this.move(e);break;case"touchend":o(this.end(e));break;case"webkitTransitionEnd":case"msTransitionEnd":case"oTransitionEnd":case"otransitionend":case"transitionend":o(this.transitionEnd(e));break;case"resize":o(a)}r.stopPropagation&&e.stopPropagation()},start:function(e){var t=e.touches[0];m={x:t.pageX,y:t.pageY,time:+new Date},f=void 0,v={},u.addEventListener("touchmove",this,!1),u.addEventListener("touchend",this,!1)},move:function(e){if(!(1<e.touches.length||e.scale&&1!==e.scale)){r.disableScroll&&e.preventDefault();var t=e.touches[0];v={x:t.pageX-m.x,y:t.pageY-m.y},void 0===f&&(f=!!(f||Math.abs(v.x)<Math.abs(v.y))),f||(e.preventDefault(),E(),r.continuous?(T(b(h-1),v.x+c[b(h-1)],0),T(h,v.x+c[h],0),T(b(h+1),v.x+c[b(h+1)],0)):(v.x=v.x/(!h&&0<v.x||h==l.length-1&&v.x<0?Math.abs(v.x)/d+1:1),T(h-1,v.x+c[h-1],0),T(h,v.x+c[h],0),T(h+1,v.x+c[h+1],0)))}},end:function(e){var t=new Date-m.time,n=Number(t)<250&&20<Math.abs(v.x)||Math.abs(v.x)>d/2,i=!h&&0<v.x||h==l.length-1&&v.x<0;r.continuous&&(i=!1);var a=v.x<0;f||(n&&!i?(h=a?(r.continuous?(x(b(h-1),-d,0),x(b(h+2),d,0)):x(h-1,-d,0),x(h,c[h]-d,p),x(b(h+1),c[b(h+1)]-d,p),b(h+1)):(r.continuous?(x(b(h+1),d,0),x(b(h-2),-d,0)):x(h+1,d,0),x(h,c[h]+d,p),x(b(h-1),c[b(h-1)]+d,p),b(h-1)),r.callback&&r.callback(h,l[h])):r.continuous?(x(b(h-1),-d,p),x(h,0,p),x(b(h+1),d,p)):(x(h-1,-d,p),x(h,0,p),x(h+1,d,p))),u.removeEventListener("touchmove",w,!1),u.removeEventListener("touchend",w,!1)},transitionEnd:function(e){parseInt(e.target.getAttribute("data-index"),10)==h&&(g&&k(),r.transitionEnd&&r.transitionEnd.call(e,h,l[h]))}};return a(),g&&k(),s.addEventListener?(s.touch&&u.addEventListener("touchstart",w,!1),s.transitions&&(u.addEventListener("webkitTransitionEnd",w,!1),u.addEventListener("msTransitionEnd",w,!1),u.addEventListener("oTransitionEnd",w,!1),u.addEventListener("otransitionend",w,!1),u.addEventListener("transitionend",w,!1)),window.addEventListener("resize",w,!1)):window.onresize=function(){a()},{setup:function(){a()},slide:function(e,t){E(),S(e,t)},prev:function(){E(),(r.continuous||h)&&S(h-1)},next:function(){E(),y()},stop:function(){E()},getPos:function(){return h},getNumSlides:function(){return i},kill:function(){E(),u.style.width="",u.style.left="";for(var e=l.length;e--;){var t=l[e];t.style.width="",t.style.left="",s.transitions&&T(e,0,0)}s.addEventListener?(u.removeEventListener("touchstart",w,!1),u.removeEventListener("webkitTransitionEnd",w,!1),u.removeEventListener("msTransitionEnd",w,!1),u.removeEventListener("oTransitionEnd",w,!1),u.removeEventListener("otransitionend",w,!1),u.removeEventListener("transitionend",w,!1),window.removeEventListener("resize",w,!1)):window.onresize=null}}}function a(){l=u.children,i=l.length,l.length<2&&(r.continuous=!1),s.transitions&&r.continuous&&l.length<3&&(u.appendChild(l[0].cloneNode(!0)),u.appendChild(u.children[1].cloneNode(!0)),l=u.children),c=new Array(l.length),d=n.getBoundingClientRect().width||n.offsetWidth,u.style.width=l.length*d+"px";for(var e=l.length;e--;){var t=l[e];t.style.width=d+"px",t.setAttribute("data-index",e),s.transitions&&(t.style.left=e*-d+"px",x(e,e<h?-d:h<e?d:0,0))}r.continuous&&s.transitions&&(x(b(h-1),-d,0),x(b(h+1),d,0)),s.transitions||(u.style.left=h*-d+"px"),n.style.visibility="visible"}function y(){(r.continuous||h<l.length-1)&&S(h+1)}function b(e){return(l.length+e%l.length)%l.length}function S(e,t){if(h!=e){if(s.transitions){var n=Math.abs(h-e)/(h-e);if(r.continuous){var i=n;(n=-c[b(e)]/d)!==i&&(e=-n*l.length+e)}for(var a=Math.abs(h-e)-1;a--;)x(b((h<e?e:h)-a-1),d*n,0);e=b(e),x(h,d*n,t||p),x(e,0,t||p),r.continuous&&x(b(e-n),-d*n,0)}else e=b(e),function(t,n,i){if(!i)return u.style.left=n+"px";var a=+new Date,o=setInterval(function(){var e=new Date-a;if(i<e)return u.style.left=n+"px",g&&k(),r.transitionEnd&&r.transitionEnd.call(event,h,l[h]),void clearInterval(o);u.style.left=(n-t)*(Math.floor(e/i*100)/100)+t+"px"},4)}(h*-d,e*-d,t||p);h=e,o(r.callback&&r.callback(h,l[h]))}}function x(e,t,n){T(e,t,n),c[e]=t}function T(e,t,n){var i=l[e],a=i&&i.style;a&&(a.webkitTransitionDuration=a.MozTransitionDuration=a.msTransitionDuration=a.OTransitionDuration=a.transitionDuration=n+"ms",a.webkitTransform="translate("+t+"px,0)translateZ(0)",a.msTransform=a.MozTransform=a.OTransform="translateX("+t+"px)")}function k(){e=setTimeout(y,g)}function E(){g=0,clearTimeout(e)}}function distanceOfTimeInWords(e,t,n){var i=e.getTime(),a=t.getTime(),o=Math.round(Math.abs(i-a)/1e3),r=Math.round(o/60);return r<=1?n?o<5?"5 seconde geleden":o<10?"10 seconde geleden":o<20?"20 seconde geleden":o<40?"30 seconde geleden":o<60?"een minuut geleden":"1 minuut geleden":0===r?"minder dan een minuut":"1 minuut":r<45?r+" minuten geleden":r<70?"1 uur geleden":r<1440?Math.round(r/60)+" uur geleden":r<2880?"1 dag geleden":r<43200?Math.round(r/1440)+" dagen geleden":r<86400?"ruim 1 maand geleden":r<525600?Math.round(r/43200)+" maanden geleden":Math.round(r/525600)+" jaren geleden"}function processTweets(e,t){var o=[];return $.each(e,function(e,t){var n=t;n.hasExternalUrl||(t.text=t.text.parseURL()),n.text=t.text.parseUsername().parseHashtag();var i=n.created.parseDate();delete n.created;var a=new Date;n.date=distanceOfTimeInWords(a,i,!0)+" geplaatst",n.tweetUrl="https://twitter.com/user/status/"+n.tweetId,n.retweetUrl="https://twitter.com/intent/retweet?tweet_id="+n.tweetId,n.replyUrl="https://twitter.com/intent/tweet?in_reply_to="+n.tweetId,n.likeUrl="https://twitter.com/intent/like?tweet_id="+n.tweetId,n.followUrl="https://twitter.com/intent/follow?screen_name="+n.screenName,o.push(n)}),o}APP={Views:{},YouTube:{}},function(e,n){if("function"==typeof define&&define.amd)define(["underscore","backbone"],function(e,t){n(0,e,t)});else if("undefined"!=typeof exports){var t=require("underscore"),i=require("backbone");n(0,t,i)}else n(0,e._,e.Backbone)}(this,function(e,u,t){var n=t.ViewState=function(e){var t=e||{};this.attributes=u.clone(t)};return u.extend(n.prototype,t.Events,{get:function(e){return this.attributes[e]},getAttributes:function(){return u.clone(this.attributes)},set:function(e,t,n){var i,a,o,r,s,l=[];if(null===e)return this;for(a in"object"==typeof e?(i=e,n=t):(i={})[e]=t,s=(n=n||{}).unset,r=n.silent,o=this.attributes,i)t=i[a],u.isEqual(o[a],t)||l.push(a),s?delete o[a]:o[a]=t;if(!r){for(var c=0,d=l.length;c<d;c++)this.trigger("change:"+l[c],this,o[l[c]],n);this.trigger("change",this,n)}return this},unset:function(e,t){return this.set(e,void 0,u.extend({},t,{unset:!0}))},clear:function(e){var t={};for(var n in this.attributes)t[n]=void 0;return this.set(t,u.extend({},e,{unset:!0}))}}),t.ViewState}),APP.Store=function(e){var t=new e.Collection,n=new e.ViewState({activeIndex:-1});return{start:function(e){t.reset(e),t.invoke("set",{dataSet:!1})},getState:function(){return n},getSlideCollection:function(){return t}}}((this._,this.Backbone)),(window.jQuery||window.Zepto)&&function(t){t.fn.Swipe=function(e){return this.each(function(){t(this).data("Swipe",new Swipe(t(this)[0],e))})}}(window.jQuery||window.Zepto),String.prototype.parseURL=function(){return this.replace(/[A-Za-z]+:\/\/[A-Za-z0-9-_]+\.[A-Za-z0-9-_:%&~\?\/.=]+/g,function(e){return e.link(e).openUrlBlank()})},String.prototype.parseUsername=function(){return this.replace(/[@]+[A-Za-z0-9-_]+/g,function(e){var t=e.replace("@","");return e.link("http://twitter.com/"+t).openUrlBlank()})},String.prototype.parseHashtag=function(){return this.replace(/[#]+[A-Za-z0-9-_]+/g,function(e){var t=e.replace("#","%23");return e.link("http://search.twitter.com/search?q="+t).openUrlBlank()})},String.prototype.parseDate=function(){var e=this.replace(/(\+\S+) (.*)/,"$2 $1");return new Date(Date.parse(e))},String.prototype.openUrlBlank=function(){return this.replace(/^<a/,'$& target="_blank"')},function(e,t,i){APP.Views.Slideshow=t.View.extend({initialize:function(e){this.timeSet=e.timeSet,this.templateName=e.templateName,this.handle=e.handle,this.render(),this.listenTo(APP.Store.getState(),"change:activeIndex",this.slide);var t=Math.floor(Math.random()*this.collection.length-1);APP.Store.getState().set("activeIndex",t);var n=document.getElementById("mySwipe");window.mySwipe=i(n,{startSlide:t,auto:this.timeSet,callback:function(e,t){APP.Store.getState().set("activeIndex",e)}}),this.binds()},binds:function(){e.bindAll(this,"keyDown"),$(document).on("keydown",this.keyDown)},keyDown:function(e){switch(e.keyCode){case 37:case 75:window.mySwipe.prev();break;case 38:this.stopTimerSlide();break;case 39:case 74:window.mySwipe.next();break;case 40:this.stopTimerSlide()}},slide:function(){var e,t,n=APP.Store.getState().get("activeIndex"),i=this.collection.length;n===i?n=0:-1===n&&(n=i-1),APP.Store.getState().set("activeIndex",n,{silent:!0}),n===i-1?(e=0,t=n-1):0===n?(t=i-1,e=n+1):(e=n+1,t=n-1);var a=this.$el.find('[data-id="'+t+'"]');this.collection.get(t).get("dataSet")||(console.log("prev",t),this.addContentToTemplate(a,t),"bolcomreclames"===this.handle&&addPlayer(t,this.collection.get(t).get("url")),this.collection.get(t).set("dataSet",!0));var o=this.$el.find('[data-id="'+n+'"]');this.collection.get(n).get("dataSet")||(console.log("active",n),this.addContentToTemplate(o,n),"bolcomreclames"===this.handle&&addPlayer(n,this.collection.get(n).get("url")),this.collection.get(n).set("dataSet",!0));var r=this.$el.find('[data-id="'+e+'"]');this.collection.get(e).get("dataSet")||(console.log("next",e),this.addContentToTemplate(r,e),"bolcomreclames"===this.handle&&addPlayer(e,this.collection.get(e).get("url")),this.collection.get(e).set("dataSet",!0)),this.handle},getTemplateData:function(e){return this.collection.get(e).toJSON()},addContentToTemplate:function(e,t){var n=$(this.templateName).html();this.template=Handlebars.compile(n),e.append(this.template(this.getTemplateData(t)))},render:function(){var e=$("#placeholder-template").html();return this.template=Handlebars.compile(e),this.collection.each(function(e){this.$el.append(this.template(e.toJSON()))},this),this}})}(this._,Backbone,Swipe);var tag=document.createElement("script");tag.src="https://www.youtube.com/iframe_api";var firstScriptTag=document.getElementsByTagName("script")[0];function addPlayer(e,t){return APP.YouTube.youtubePlayer[e]=new YT.Player("youtube-player"+e,{width:"100%",height:"100%",videoId:t,playerVars:{autoplay:0,controls:0,rel:0,fs:0},events:{onReady:onPlayerReady,onStateChange:onPlayerStateChange}})}function onPlayerReady(e){console.log("onPlayerReady",e.target.playerInfo.videoData.video_id),e.target.playerInfo.videoData.video_id===APP.Store.getSlideCollection().get(APP.Store.getState().get("activeIndex")).attributes.url&&e.target.playVideo()}function onPlayerStateChange(e){switch(e.data){case-1:console.log("video unstarted"),console.log("Duration:"+e.target.getDuration());break;case 0:console.log("video ended"),window.mySwipe.next();break;case 1:console.log("video playing from "+e.target.getCurrentTime());break;case 2:console.log("video paused at "+e.target.getCurrentTime());break;case 3:console.log("video buffering");case 5:console.log("video cued");default:document.getElementById("mySwipe").focus()}}firstScriptTag.parentNode.insertBefore(tag,firstScriptTag),APP.YouTube.youtubePlayer=[];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEuanMiLCJzd2lwZS5qcyIsInR3aXR0ZXIuanMiLCJhcHAuanMiLCJiYWNrYm9uZS12aWV3c3RhdGUuanMiLCJTdG9yZS5qcyIsInZpZXdzL3NsaWRlc2hvdy5qcyIsInlvdXR1YmUuanMiXSwibmFtZXMiOlsibG9hZERhdGEiLCJoYW5kbGUiLCJkYXRhVXJsIiwicXVlcnkiLCJqUXVlcnkiLCJhZGRDbGFzcyIsIiQiLCJhamF4IiwidXJsIiwidHlwZSIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsImVycm9ycyIsImxlbmd0aCIsImRhdGEiLCJ0aW1lU2V0IiwiZmVlZCIsImluZGV4T2YiLCJwcm9kdWN0cyIsInByb2Nlc3NUd2VldHMiLCJvbmUiLCJlIiwiQVBQIiwiU3RvcmUiLCJzdGFydCIsIlNsaWRlc2hvdyIsIlZpZXdzIiwiZWwiLCJ0ZW1wbGF0ZU5hbWUiLCJjb2xsZWN0aW9uIiwiZ2V0U2xpZGVDb2xsZWN0aW9uIiwicmVtb3ZlQ2xhc3MiLCJ0ZXh0IiwiZXJyb3IiLCJTd2lwZSIsImNvbnRhaW5lciIsIm9wdGlvbnMiLCJub29wIiwib2ZmbG9hZEZuIiwiZm4iLCJzZXRUaW1lb3V0IiwiYnJvd3NlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJ3aW5kb3ciLCJ0b3VjaCIsIkRvY3VtZW50VG91Y2giLCJkb2N1bWVudCIsInRyYW5zaXRpb25zIiwidGVtcCIsInByb3BzIiwiaSIsInVuZGVmaW5lZCIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsInNsaWRlcyIsInNsaWRlUG9zIiwid2lkdGgiLCJlbGVtZW50IiwiY2hpbGRyZW4iLCJpbmRleCIsInBhcnNlSW50Iiwic3RhcnRTbGlkZSIsInNwZWVkIiwiY29udGludW91cyIsImludGVydmFsIiwiaXNTY3JvbGxpbmciLCJkZWxheSIsImF1dG8iLCJkZWx0YSIsImV2ZW50cyIsImhhbmRsZUV2ZW50IiwiZXZlbnQiLCJ0aGlzIiwibW92ZSIsImVuZCIsInRyYW5zaXRpb25FbmQiLCJzZXR1cCIsInN0b3BQcm9wYWdhdGlvbiIsInRvdWNoZXMiLCJ4IiwicGFnZVgiLCJ5IiwicGFnZVkiLCJ0aW1lIiwiRGF0ZSIsInNjYWxlIiwiZGlzYWJsZVNjcm9sbCIsInByZXZlbnREZWZhdWx0IiwiTWF0aCIsImFicyIsInN0b3AiLCJ0cmFuc2xhdGUiLCJjaXJjbGUiLCJkdXJhdGlvbiIsImlzVmFsaWRTbGlkZSIsIk51bWJlciIsImlzUGFzdEJvdW5kcyIsImRpcmVjdGlvbiIsImNhbGxiYWNrIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsImJlZ2luIiwiY2FsbCIsIm9ucmVzaXplIiwic2xpZGUiLCJ0byIsInByZXYiLCJuZXh0IiwiZ2V0UG9zIiwiZ2V0TnVtU2xpZGVzIiwia2lsbCIsImxlZnQiLCJwb3MiLCJhcHBlbmRDaGlsZCIsImNsb25lTm9kZSIsIkFycmF5IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwib2Zmc2V0V2lkdGgiLCJzZXRBdHRyaWJ1dGUiLCJ2aXNpYmlsaXR5Iiwic2xpZGVTcGVlZCIsIm5hdHVyYWxfZGlyZWN0aW9uIiwiZGlmZiIsImZyb20iLCJ0aW1lciIsInNldEludGVydmFsIiwidGltZUVsYXAiLCJjbGVhckludGVydmFsIiwiZmxvb3IiLCJhbmltYXRlIiwiZGlzdCIsIndlYmtpdFRyYW5zaXRpb25EdXJhdGlvbiIsIk1velRyYW5zaXRpb25EdXJhdGlvbiIsIm1zVHJhbnNpdGlvbkR1cmF0aW9uIiwiT1RyYW5zaXRpb25EdXJhdGlvbiIsInRyYW5zaXRpb25EdXJhdGlvbiIsIndlYmtpdFRyYW5zZm9ybSIsIm1zVHJhbnNmb3JtIiwiTW96VHJhbnNmb3JtIiwiT1RyYW5zZm9ybSIsImNsZWFyVGltZW91dCIsImRpc3RhbmNlT2ZUaW1lSW5Xb3JkcyIsImZyb21UaW1lIiwidG9UaW1lIiwiaW5jbHVkZVNlY29uZHMiLCJmcm9tU2Vjb25kcyIsImdldFRpbWUiLCJ0b1NlY29uZHMiLCJkaXN0YW5jZUluU2Vjb25kcyIsInJvdW5kIiwiZGlzdGFuY2VJbk1pbnV0ZXMiLCJ1bmlxdWUiLCJ0d2VldHMiLCJlYWNoIiwib2JqIiwiaGFzRXh0ZXJuYWxVcmwiLCJwYXJzZVVSTCIsInBhcnNlVXNlcm5hbWUiLCJwYXJzZUhhc2h0YWciLCJjcmVhdGVkIiwicGFyc2VEYXRlIiwibm93IiwiZGF0ZSIsInR3ZWV0VXJsIiwidHdlZXRJZCIsInJldHdlZXRVcmwiLCJyZXBseVVybCIsImxpa2VVcmwiLCJmb2xsb3dVcmwiLCJzY3JlZW5OYW1lIiwicHVzaCIsIllvdVR1YmUiLCJyb290IiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsIl8iLCJCYWNrYm9uZSIsImV4cG9ydHMiLCJyZXF1aXJlIiwiVmlld1N0YXRlIiwiYXR0cmlidXRlcyIsImF0dHJzIiwiY2xvbmUiLCJleHRlbmQiLCJwcm90b3R5cGUiLCJFdmVudHMiLCJnZXQiLCJhdHRyIiwiZ2V0QXR0cmlidXRlcyIsInNldCIsImtleSIsInZhbCIsImN1cnJlbnQiLCJzaWxlbnQiLCJ1bnNldCIsImNoYW5nZXMiLCJpc0VxdWFsIiwibCIsInRyaWdnZXIiLCJjbGVhciIsInNsaWRlQ29sbGVjdGlvbiIsIkNvbGxlY3Rpb24iLCJzdGF0ZSIsImFjdGl2ZUluZGV4IiwiZGF0YUpzb24iLCJyZXNldCIsImludm9rZSIsImRhdGFTZXQiLCJnZXRTdGF0ZSIsIlplcHRvIiwicGFyYW1zIiwiU3RyaW5nIiwicmVwbGFjZSIsInUiLCJsaW5rIiwib3BlblVybEJsYW5rIiwidXNlcm5hbWUiLCJ0IiwidGFnIiwibmV3dGV4dCIsInBhcnNlIiwiVmlldyIsImluaXRpYWxpemUiLCJyZW5kZXIiLCJsaXN0ZW5UbyIsInJhbmRvbUluZGV4IiwicmFuZG9tIiwiZWxlbSIsImdldEVsZW1lbnRCeUlkIiwibXlTd2lwZSIsImJpbmRzIiwiYmluZEFsbCIsIm9uIiwia2V5RG93biIsImV2Iiwia2V5Q29kZSIsInN0b3BUaW1lclNsaWRlIiwiYWN0aXZlIiwic2xpZGVzTGVuZ2h0IiwicHJldkVsIiwiJGVsIiwiZmluZCIsImNvbnNvbGUiLCJsb2ciLCJhZGRDb250ZW50VG9UZW1wbGF0ZSIsImFkZFBsYXllciIsImFjdGl2ZUVsIiwibmV4dEVsIiwiZ2V0VGVtcGxhdGVEYXRhIiwic2xpZGVuciIsInRvSlNPTiIsInNvdXJjZSIsImh0bWwiLCJ0ZW1wbGF0ZSIsIkhhbmRsZWJhcnMiLCJjb21waWxlIiwiYXBwZW5kIiwibW9kZWwiLCJzcmMiLCJmaXJzdFNjcmlwdFRhZyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic2xpZGVOciIsImlkIiwieW91dHViZVBsYXllciIsIllUIiwiUGxheWVyIiwiaGVpZ2h0IiwidmlkZW9JZCIsInBsYXllclZhcnMiLCJhdXRvcGxheSIsImNvbnRyb2xzIiwicmVsIiwiZnMiLCJvblJlYWR5Iiwib25QbGF5ZXJSZWFkeSIsIm9uU3RhdGVDaGFuZ2UiLCJvblBsYXllclN0YXRlQ2hhbmdlIiwicGxheWVySW5mbyIsInZpZGVvRGF0YSIsInZpZGVvX2lkIiwicGxheVZpZGVvIiwiZ2V0RHVyYXRpb24iLCJnZXRDdXJyZW50VGltZSIsImZvY3VzIiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBQUEsU0FBQUMsRUFBQUMsRUFBQUMsR0FDQUMsT0FBQSxhQUFBSCxHQUFBSSxTQUFBLFdBRUFDLEVBQUFDLEtBQUEsQ0FDQUMsSUFBQU4sRUFDQU8sS0FBQSxNQUNBQyxRQUFBLFNBQUFDLEdBQ0EsUUFBQSxJQUFBQSxFQUFBQyxRQUFBRCxFQUFBQyxPQUFBQyxPQUFBLEVBQUEsQ0FDQSxJQUFBQyxFQUNBQyxFQUFBLEtBQ0EsR0FBQVosRUFBQWEsS0FBQUMsUUFBQSxXQUFBLEdBQUFkLEVBQUFhLEtBQUFDLFFBQUEsU0FDQUgsRUFBQUgsRUFBQU8sVUFDQSxHQUFBZixFQUFBYSxLQUFBQyxRQUFBLGFBQ0FILEVBQUFILEVBQ0FJLEVBQUEsR0FFQUQsR0FEQSxHQUFBWCxFQUFBYSxLQUFBQyxRQUFBLE9BQ0FOLEVBRUFRLGNBQUFSLEdBR0FQLE9B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Q0EvTSxNQUFBLE9BQ0FvTixPQUFBLE9BQ0FDLFFBQUFMLEVBQ0FNLFdBQUEsQ0FDQUMsU0FBQSxFQUNBQyxTQUFBLEVBRUFDLElBQUEsRUFDQUMsR0FBQSxHQUVBN00sT0FBQSxDQUNBOE0sUUFBQUMsY0FDQUMsY0FBQUMsdUJBS0EsU0FBQUYsY0FBQXhDLEdBQ0FRLFFBQUFDLElBQUEsZ0JBQUFULEVBQUF4SSxPQUFBbUwsV0FBQUMsVUFBQUMsVUFDQTdDLEVBQUF4SSxPQUFBbUwsV0FBQUMsVUFBQUMsV0FBQW5RLElBQUFDLE1BQUFPLHFCQUFBOEosSUFBQXRLLElBQUFDLE1BQUEyTCxXQUFBdEIsSUFBQSxnQkFBQU4sV0FBQTlLLEtBQUFvTyxFQUFBeEksT0FBQXNMLFlBR0EsU0FBQUosb0JBQUExQyxHQUNBLE9BQUFBLEVBQUE5TixNQUNBLEtBQUEsRUFDQXNPLFFBQUFDLElBQUEsbUJBQ0FELFFBQUFDLElBQUEsWUFBQVQsRUFBQXhJLE9BQUF1TCxlQUNBLE1BQ0EsS0FBQSxFQUNBdkMsUUFBQUMsSUFBQSxlQUNBMU0sT0FBQTRMLFFBQUEzSCxPQUNBLE1BQ0EsS0FBQSxFQUNBd0ksUUFBQUMsSUFBQSxzQkFBQVQsRUFBQXhJLE9BQUF3TCxrQkFDQSxNQUNBLEtBQUEsRUFDQXhDLFFBQUFDLElBQUEsbUJBQUFULEVBQUF4SSxPQUFBd0wsa0JBQ0EsTUFDQSxLQUFBLEVBQ0F4QyxRQUFBQyxJQUFBLG1CQUNBLEtBQUEsRUFDQUQsUUFBQUMsSUFBQSxjQUNBLFFBRUF2TSxTQUFBd0wsZUFBQSxXQUFBdUQsU0FqREF4QixlQUFBeUIsV0FBQUMsYUFBQW5FLElBQUF5QyxnQkFDQS9PLElBQUFzSixRQUFBNkYsY0FBQSIsImZpbGUiOiJzY3JlZW5zYXZlci5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBsb2FkRGF0YShoYW5kbGUsIGRhdGFVcmwsIHF1ZXJ5KSB7XG4gIGpRdWVyeSgnLmJhY2tkcm9wLicgKyBoYW5kbGUpLmFkZENsYXNzKCd2aXNpYmxlJyk7XG5cbiAgJC5hamF4KHtcbiAgICB1cmw6IGRhdGFVcmwsXG4gICAgdHlwZTogJ0dFVCcsXG4gICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICBpZiAodHlwZW9mIHJlc3BvbnNlLmVycm9ycyA9PT0gJ3VuZGVmaW5lZCcgfHwgcmVzcG9uc2UuZXJyb3JzLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgdmFyIGRhdGE7XG4gICAgICAgIHZhciB0aW1lU2V0ID0gODAwMDtcbiAgICAgICAgaWYgKHF1ZXJ5LmZlZWQuaW5kZXhPZigncHJpY2UnKSAhPSAtMSB8fCBxdWVyeS5mZWVkLmluZGV4T2YoJ3NhbGVzJykgIT0gLTEpIHtcbiAgICAgICAgICBkYXRhID0gcmVzcG9uc2UucHJvZHVjdHM7XG4gICAgICAgIH0gZWxzZSBpZihxdWVyeS5mZWVkLmluZGV4T2YoJ3JlY2xhbWVzJykgIT0gLTEpIHtcbiAgICAgICAgICBkYXRhID0gcmVzcG9uc2U7XG4gICAgICAgICAgdGltZVNldCA9IDA7XG4gICAgICAgIH0gZWxzZSBpZihxdWVyeS5mZWVkLmluZGV4T2YoJ25vcycpICE9IC0xKSB7XG4gICAgICAgICAgZGF0YSA9IHJlc3BvbnNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRhdGEgPSBwcm9jZXNzVHdlZXRzKHJlc3BvbnNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGpRdWVyeSgnLmJhY2tkcm9wLicgKyBoYW5kbGUgKyAnIC50dycpLmFkZENsYXNzKCdhbmltYXRpb24nKTtcbiAgICAgICAgalF1ZXJ5KCcuYmFja2Ryb3AuJyArIGhhbmRsZSArICcgLnR3Jykub25lKCd3ZWJraXRBbmltYXRpb25FbmQgb2FuaW1hdGlvbmVuZCBtc0FuaW1hdGlvbkVuZCBhbmltYXRpb25lbmQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIEFQUC5TdG9yZS5zdGFydChkYXRhKTtcbiAgICAgICAgICBBUFAuU2xpZGVzaG93ID0gbmV3IEFQUC5WaWV3cy5TbGlkZXNob3coe1xuICAgICAgICAgICAgZWw6ICQoJy50ZW1wbGF0ZS1ob2xkZXInKSxcbiAgICAgICAgICAgIHRlbXBsYXRlTmFtZTogJyMnICsgaGFuZGxlICsgJy10ZW1wbGF0ZScsXG4gICAgICAgICAgICBjb2xsZWN0aW9uOiBuZXcgQVBQLlN0b3JlLmdldFNsaWRlQ29sbGVjdGlvbigpLFxuICAgICAgICAgICAgdGltZVNldDogdGltZVNldCxcbiAgICAgICAgICAgIGhhbmRsZTogaGFuZGxlXG4gICAgICAgICAgfSlcblxuICAgICAgICAgICQoJy5iYWNrZHJvcC4nICsgaGFuZGxlKS5yZW1vdmVDbGFzcygndmlzaWJsZScpO1xuICAgICAgICB9KTtcblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJCgnLnBvc3QgLm1lc3NhZ2UgLnRleHQtbWVzc2FnZScpLnRleHQoJ1Jlc3BvbnNlIGVycm9yJyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24gKGVycm9ycykge1xuICAgICAgJCgnLnBvc3QgLm1lc3NhZ2UgLnRleHQtbWVzc2FnZScpLnRleHQoJ1JlcXVlc3QgZXJyb3InKTtcbiAgICB9LFxuICB9KTtcblxufVxuIiwiLypcbiAqIFN3aXBlIDIuMFxuICpcbiAqIEJyYWQgQmlyZHNhbGxcbiAqIENvcHlyaWdodCAyMDEzLCBNSVQgTGljZW5zZVxuICpcbiovXG5cbmZ1bmN0aW9uIFN3aXBlKGNvbnRhaW5lciwgb3B0aW9ucykge1xuXG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIC8vIHV0aWxpdGllc1xuICB2YXIgbm9vcCA9IGZ1bmN0aW9uKCkge307IC8vIHNpbXBsZSBubyBvcGVyYXRpb24gZnVuY3Rpb25cbiAgdmFyIG9mZmxvYWRGbiA9IGZ1bmN0aW9uKGZuKSB7IHNldFRpbWVvdXQoZm4gfHwgbm9vcCwgMCkgfTsgLy8gb2ZmbG9hZCBhIGZ1bmN0aW9ucyBleGVjdXRpb25cblxuICAvLyBjaGVjayBicm93c2VyIGNhcGFiaWxpdGllc1xuICB2YXIgYnJvd3NlciA9IHtcbiAgICBhZGRFdmVudExpc3RlbmVyOiAhIXdpbmRvdy5hZGRFdmVudExpc3RlbmVyLFxuICAgIHRvdWNoOiAoJ29udG91Y2hzdGFydCcgaW4gd2luZG93KSB8fCB3aW5kb3cuRG9jdW1lbnRUb3VjaCAmJiBkb2N1bWVudCBpbnN0YW5jZW9mIERvY3VtZW50VG91Y2gsXG4gICAgdHJhbnNpdGlvbnM6IChmdW5jdGlvbih0ZW1wKSB7XG4gICAgICB2YXIgcHJvcHMgPSBbJ3RyYW5zaXRpb25Qcm9wZXJ0eScsICdXZWJraXRUcmFuc2l0aW9uJywgJ01velRyYW5zaXRpb24nLCAnT1RyYW5zaXRpb24nLCAnbXNUcmFuc2l0aW9uJ107XG4gICAgICBmb3IgKCB2YXIgaSBpbiBwcm9wcyApIGlmICh0ZW1wLnN0eWxlWyBwcm9wc1tpXSBdICE9PSB1bmRlZmluZWQpIHJldHVybiB0cnVlO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N3aXBlJykpXG4gIH07XG5cbiAgLy8gcXVpdCBpZiBubyByb290IGVsZW1lbnRcbiAgaWYgKCFjb250YWluZXIpIHJldHVybjtcbiAgdmFyIGVsZW1lbnQgPSBjb250YWluZXIuY2hpbGRyZW5bMF07XG4gIHZhciBzbGlkZXMsIHNsaWRlUG9zLCB3aWR0aCwgbGVuZ3RoO1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIGluZGV4ID0gcGFyc2VJbnQob3B0aW9ucy5zdGFydFNsaWRlLCAxMCkgfHwgMDtcbiAgdmFyIHNwZWVkID0gb3B0aW9ucy5zcGVlZCB8fCAzMDA7XG4gIG9wdGlvbnMuY29udGludW91cyA9IG9wdGlvbnMuY29udGludW91cyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5jb250aW51b3VzIDogdHJ1ZTtcblxuICBmdW5jdGlvbiBzZXR1cCgpIHtcblxuICAgIC8vIGNhY2hlIHNsaWRlc1xuICAgIHNsaWRlcyA9IGVsZW1lbnQuY2hpbGRyZW47XG4gICAgbGVuZ3RoID0gc2xpZGVzLmxlbmd0aDtcblxuICAgIC8vIHNldCBjb250aW51b3VzIHRvIGZhbHNlIGlmIG9ubHkgb25lIHNsaWRlXG4gICAgaWYgKHNsaWRlcy5sZW5ndGggPCAyKSBvcHRpb25zLmNvbnRpbnVvdXMgPSBmYWxzZTtcblxuICAgIC8vc3BlY2lhbCBjYXNlIGlmIHR3byBzbGlkZXNcbiAgICBpZiAoYnJvd3Nlci50cmFuc2l0aW9ucyAmJiBvcHRpb25zLmNvbnRpbnVvdXMgJiYgc2xpZGVzLmxlbmd0aCA8IDMpIHtcbiAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQoc2xpZGVzWzBdLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgICBlbGVtZW50LmFwcGVuZENoaWxkKGVsZW1lbnQuY2hpbGRyZW5bMV0uY2xvbmVOb2RlKHRydWUpKTtcbiAgICAgIHNsaWRlcyA9IGVsZW1lbnQuY2hpbGRyZW47XG4gICAgfVxuXG4gICAgLy8gY3JlYXRlIGFuIGFycmF5IHRvIHN0b3JlIGN1cnJlbnQgcG9zaXRpb25zIG9mIGVhY2ggc2xpZGVcbiAgICBzbGlkZVBvcyA9IG5ldyBBcnJheShzbGlkZXMubGVuZ3RoKTtcblxuICAgIC8vIGRldGVybWluZSB3aWR0aCBvZiBlYWNoIHNsaWRlXG4gICAgd2lkdGggPSBjb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggfHwgY29udGFpbmVyLm9mZnNldFdpZHRoO1xuXG4gICAgZWxlbWVudC5zdHlsZS53aWR0aCA9IChzbGlkZXMubGVuZ3RoICogd2lkdGgpICsgJ3B4JztcblxuICAgIC8vIHN0YWNrIGVsZW1lbnRzXG4gICAgdmFyIHBvcyA9IHNsaWRlcy5sZW5ndGg7XG4gICAgd2hpbGUocG9zLS0pIHtcblxuICAgICAgdmFyIHNsaWRlID0gc2xpZGVzW3Bvc107XG5cbiAgICAgIHNsaWRlLnN0eWxlLndpZHRoID0gd2lkdGggKyAncHgnO1xuICAgICAgc2xpZGUuc2V0QXR0cmlidXRlKCdkYXRhLWluZGV4JywgcG9zKTtcblxuICAgICAgaWYgKGJyb3dzZXIudHJhbnNpdGlvbnMpIHtcbiAgICAgICAgc2xpZGUuc3R5bGUubGVmdCA9IChwb3MgKiAtd2lkdGgpICsgJ3B4JztcbiAgICAgICAgbW92ZShwb3MsIGluZGV4ID4gcG9zID8gLXdpZHRoIDogKGluZGV4IDwgcG9zID8gd2lkdGggOiAwKSwgMCk7XG4gICAgICB9XG5cbiAgICB9XG5cbiAgICAvLyByZXBvc2l0aW9uIGVsZW1lbnRzIGJlZm9yZSBhbmQgYWZ0ZXIgaW5kZXhcbiAgICBpZiAob3B0aW9ucy5jb250aW51b3VzICYmIGJyb3dzZXIudHJhbnNpdGlvbnMpIHtcbiAgICAgIG1vdmUoY2lyY2xlKGluZGV4LTEpLCAtd2lkdGgsIDApO1xuICAgICAgbW92ZShjaXJjbGUoaW5kZXgrMSksIHdpZHRoLCAwKTtcbiAgICB9XG5cbiAgICBpZiAoIWJyb3dzZXIudHJhbnNpdGlvbnMpIGVsZW1lbnQuc3R5bGUubGVmdCA9IChpbmRleCAqIC13aWR0aCkgKyAncHgnO1xuXG4gICAgY29udGFpbmVyLnN0eWxlLnZpc2liaWxpdHkgPSAndmlzaWJsZSc7XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIHByZXYoKSB7XG5cbiAgICBpZiAob3B0aW9ucy5jb250aW51b3VzKSBzbGlkZShpbmRleC0xKTtcbiAgICBlbHNlIGlmIChpbmRleCkgc2xpZGUoaW5kZXgtMSk7XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIG5leHQoKSB7XG5cbiAgICBpZiAob3B0aW9ucy5jb250aW51b3VzKSBzbGlkZShpbmRleCsxKTtcbiAgICBlbHNlIGlmIChpbmRleCA8IHNsaWRlcy5sZW5ndGggLSAxKSBzbGlkZShpbmRleCsxKTtcblxuICB9XG5cbiAgZnVuY3Rpb24gY2lyY2xlKGluZGV4KSB7XG5cbiAgICAvLyBhIHNpbXBsZSBwb3NpdGl2ZSBtb2R1bG8gdXNpbmcgc2xpZGVzLmxlbmd0aFxuICAgIHJldHVybiAoc2xpZGVzLmxlbmd0aCArIChpbmRleCAlIHNsaWRlcy5sZW5ndGgpKSAlIHNsaWRlcy5sZW5ndGg7XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIHNsaWRlKHRvLCBzbGlkZVNwZWVkKSB7XG5cbiAgICAvLyBkbyBub3RoaW5nIGlmIGFscmVhZHkgb24gcmVxdWVzdGVkIHNsaWRlXG4gICAgaWYgKGluZGV4ID09IHRvKSByZXR1cm47XG5cbiAgICBpZiAoYnJvd3Nlci50cmFuc2l0aW9ucykge1xuXG4gICAgICB2YXIgZGlyZWN0aW9uID0gTWF0aC5hYnMoaW5kZXgtdG8pIC8gKGluZGV4LXRvKTsgLy8gMTogYmFja3dhcmQsIC0xOiBmb3J3YXJkXG5cbiAgICAgIC8vIGdldCB0aGUgYWN0dWFsIHBvc2l0aW9uIG9mIHRoZSBzbGlkZVxuICAgICAgaWYgKG9wdGlvbnMuY29udGludW91cykge1xuICAgICAgICB2YXIgbmF0dXJhbF9kaXJlY3Rpb24gPSBkaXJlY3Rpb247XG4gICAgICAgIGRpcmVjdGlvbiA9IC1zbGlkZVBvc1tjaXJjbGUodG8pXSAvIHdpZHRoO1xuXG4gICAgICAgIC8vIGlmIGdvaW5nIGZvcndhcmQgYnV0IHRvIDwgaW5kZXgsIHVzZSB0byA9IHNsaWRlcy5sZW5ndGggKyB0b1xuICAgICAgICAvLyBpZiBnb2luZyBiYWNrd2FyZCBidXQgdG8gPiBpbmRleCwgdXNlIHRvID0gLXNsaWRlcy5sZW5ndGggKyB0b1xuICAgICAgICBpZiAoZGlyZWN0aW9uICE9PSBuYXR1cmFsX2RpcmVjdGlvbikgdG8gPSAgLWRpcmVjdGlvbiAqIHNsaWRlcy5sZW5ndGggKyB0bztcblxuICAgICAgfVxuXG4gICAgICB2YXIgZGlmZiA9IE1hdGguYWJzKGluZGV4LXRvKSAtIDE7XG5cbiAgICAgIC8vIG1vdmUgYWxsIHRoZSBzbGlkZXMgYmV0d2VlbiBpbmRleCBhbmQgdG8gaW4gdGhlIHJpZ2h0IGRpcmVjdGlvblxuICAgICAgd2hpbGUgKGRpZmYtLSkgbW92ZSggY2lyY2xlKCh0byA+IGluZGV4ID8gdG8gOiBpbmRleCkgLSBkaWZmIC0gMSksIHdpZHRoICogZGlyZWN0aW9uLCAwKTtcblxuICAgICAgdG8gPSBjaXJjbGUodG8pO1xuXG4gICAgICBtb3ZlKGluZGV4LCB3aWR0aCAqIGRpcmVjdGlvbiwgc2xpZGVTcGVlZCB8fCBzcGVlZCk7XG4gICAgICBtb3ZlKHRvLCAwLCBzbGlkZVNwZWVkIHx8IHNwZWVkKTtcblxuICAgICAgaWYgKG9wdGlvbnMuY29udGludW91cykgbW92ZShjaXJjbGUodG8gLSBkaXJlY3Rpb24pLCAtKHdpZHRoICogZGlyZWN0aW9uKSwgMCk7IC8vIHdlIG5lZWQgdG8gZ2V0IHRoZSBuZXh0IGluIHBsYWNlXG5cbiAgICB9IGVsc2Uge1xuXG4gICAgICB0byA9IGNpcmNsZSh0byk7XG4gICAgICBhbmltYXRlKGluZGV4ICogLXdpZHRoLCB0byAqIC13aWR0aCwgc2xpZGVTcGVlZCB8fCBzcGVlZCk7XG4gICAgICAvL25vIGZhbGxiYWNrIGZvciBhIGNpcmN1bGFyIGNvbnRpbnVvdXMgaWYgdGhlIGJyb3dzZXIgZG9lcyBub3QgYWNjZXB0IHRyYW5zaXRpb25zXG4gICAgfVxuXG4gICAgaW5kZXggPSB0bztcbiAgICBvZmZsb2FkRm4ob3B0aW9ucy5jYWxsYmFjayAmJiBvcHRpb25zLmNhbGxiYWNrKGluZGV4LCBzbGlkZXNbaW5kZXhdKSk7XG4gIH1cblxuICBmdW5jdGlvbiBtb3ZlKGluZGV4LCBkaXN0LCBzcGVlZCkge1xuXG4gICAgdHJhbnNsYXRlKGluZGV4LCBkaXN0LCBzcGVlZCk7XG4gICAgc2xpZGVQb3NbaW5kZXhdID0gZGlzdDtcblxuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNsYXRlKGluZGV4LCBkaXN0LCBzcGVlZCkge1xuXG4gICAgdmFyIHNsaWRlID0gc2xpZGVzW2luZGV4XTtcbiAgICB2YXIgc3R5bGUgPSBzbGlkZSAmJiBzbGlkZS5zdHlsZTtcblxuICAgIGlmICghc3R5bGUpIHJldHVybjtcblxuICAgIHN0eWxlLndlYmtpdFRyYW5zaXRpb25EdXJhdGlvbiA9XG4gICAgc3R5bGUuTW96VHJhbnNpdGlvbkR1cmF0aW9uID1cbiAgICBzdHlsZS5tc1RyYW5zaXRpb25EdXJhdGlvbiA9XG4gICAgc3R5bGUuT1RyYW5zaXRpb25EdXJhdGlvbiA9XG4gICAgc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gc3BlZWQgKyAnbXMnO1xuXG4gICAgc3R5bGUud2Via2l0VHJhbnNmb3JtID0gJ3RyYW5zbGF0ZSgnICsgZGlzdCArICdweCwwKScgKyAndHJhbnNsYXRlWigwKSc7XG4gICAgc3R5bGUubXNUcmFuc2Zvcm0gPVxuICAgIHN0eWxlLk1velRyYW5zZm9ybSA9XG4gICAgc3R5bGUuT1RyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKCcgKyBkaXN0ICsgJ3B4KSc7XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIGFuaW1hdGUoZnJvbSwgdG8sIHNwZWVkKSB7XG5cbiAgICAvLyBpZiBub3QgYW4gYW5pbWF0aW9uLCBqdXN0IHJlcG9zaXRpb25cbiAgICBpZiAoIXNwZWVkKSB7XG5cbiAgICAgIGVsZW1lbnQuc3R5bGUubGVmdCA9IHRvICsgJ3B4JztcbiAgICAgIHJldHVybjtcblxuICAgIH1cblxuICAgIHZhciBzdGFydCA9ICtuZXcgRGF0ZTtcblxuICAgIHZhciB0aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuXG4gICAgICB2YXIgdGltZUVsYXAgPSArbmV3IERhdGUgLSBzdGFydDtcblxuICAgICAgaWYgKHRpbWVFbGFwID4gc3BlZWQpIHtcblxuICAgICAgICBlbGVtZW50LnN0eWxlLmxlZnQgPSB0byArICdweCc7XG5cbiAgICAgICAgaWYgKGRlbGF5KSBiZWdpbigpO1xuXG4gICAgICAgIG9wdGlvbnMudHJhbnNpdGlvbkVuZCAmJiBvcHRpb25zLnRyYW5zaXRpb25FbmQuY2FsbChldmVudCwgaW5kZXgsIHNsaWRlc1tpbmRleF0pO1xuXG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpO1xuICAgICAgICByZXR1cm47XG5cbiAgICAgIH1cblxuICAgICAgZWxlbWVudC5zdHlsZS5sZWZ0ID0gKCggKHRvIC0gZnJvbSkgKiAoTWF0aC5mbG9vcigodGltZUVsYXAgLyBzcGVlZCkgKiAxMDApIC8gMTAwKSApICsgZnJvbSkgKyAncHgnO1xuXG4gICAgfSwgNCk7XG5cbiAgfVxuXG4gIC8vIHNldHVwIGF1dG8gc2xpZGVzaG93XG4gIHZhciBkZWxheSA9IG9wdGlvbnMuYXV0byB8fCAwO1xuICB2YXIgaW50ZXJ2YWw7XG5cbiAgZnVuY3Rpb24gYmVnaW4oKSB7XG5cbiAgICBpbnRlcnZhbCA9IHNldFRpbWVvdXQobmV4dCwgZGVsYXkpO1xuXG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuXG4gICAgZGVsYXkgPSAwO1xuICAgIGNsZWFyVGltZW91dChpbnRlcnZhbCk7XG5cbiAgfVxuXG5cbiAgLy8gc2V0dXAgaW5pdGlhbCB2YXJzXG4gIHZhciBzdGFydCA9IHt9O1xuICB2YXIgZGVsdGEgPSB7fTtcbiAgdmFyIGlzU2Nyb2xsaW5nO1xuXG4gIC8vIHNldHVwIGV2ZW50IGNhcHR1cmluZ1xuICB2YXIgZXZlbnRzID0ge1xuXG4gICAgaGFuZGxlRXZlbnQ6IGZ1bmN0aW9uKGV2ZW50KSB7XG5cbiAgICAgIHN3aXRjaCAoZXZlbnQudHlwZSkge1xuICAgICAgICBjYXNlICd0b3VjaHN0YXJ0JzogdGhpcy5zdGFydChldmVudCk7IGJyZWFrO1xuICAgICAgICBjYXNlICd0b3VjaG1vdmUnOiB0aGlzLm1vdmUoZXZlbnQpOyBicmVhaztcbiAgICAgICAgY2FzZSAndG91Y2hlbmQnOiBvZmZsb2FkRm4odGhpcy5lbmQoZXZlbnQpKTsgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3dlYmtpdFRyYW5zaXRpb25FbmQnOlxuICAgICAgICBjYXNlICdtc1RyYW5zaXRpb25FbmQnOlxuICAgICAgICBjYXNlICdvVHJhbnNpdGlvbkVuZCc6XG4gICAgICAgIGNhc2UgJ290cmFuc2l0aW9uZW5kJzpcbiAgICAgICAgY2FzZSAndHJhbnNpdGlvbmVuZCc6IG9mZmxvYWRGbih0aGlzLnRyYW5zaXRpb25FbmQoZXZlbnQpKTsgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3Jlc2l6ZSc6IG9mZmxvYWRGbihzZXR1cCk7IGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5zdG9wUHJvcGFnYXRpb24pIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgfSxcbiAgICBzdGFydDogZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgICAgdmFyIHRvdWNoZXMgPSBldmVudC50b3VjaGVzWzBdO1xuXG4gICAgICAvLyBtZWFzdXJlIHN0YXJ0IHZhbHVlc1xuICAgICAgc3RhcnQgPSB7XG5cbiAgICAgICAgLy8gZ2V0IGluaXRpYWwgdG91Y2ggY29vcmRzXG4gICAgICAgIHg6IHRvdWNoZXMucGFnZVgsXG4gICAgICAgIHk6IHRvdWNoZXMucGFnZVksXG5cbiAgICAgICAgLy8gc3RvcmUgdGltZSB0byBkZXRlcm1pbmUgdG91Y2ggZHVyYXRpb25cbiAgICAgICAgdGltZTogK25ldyBEYXRlXG5cbiAgICAgIH07XG5cbiAgICAgIC8vIHVzZWQgZm9yIHRlc3RpbmcgZmlyc3QgbW92ZSBldmVudFxuICAgICAgaXNTY3JvbGxpbmcgPSB1bmRlZmluZWQ7XG5cbiAgICAgIC8vIHJlc2V0IGRlbHRhIGFuZCBlbmQgbWVhc3VyZW1lbnRzXG4gICAgICBkZWx0YSA9IHt9O1xuXG4gICAgICAvLyBhdHRhY2ggdG91Y2htb3ZlIGFuZCB0b3VjaGVuZCBsaXN0ZW5lcnNcbiAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcywgZmFsc2UpO1xuICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMsIGZhbHNlKTtcblxuICAgIH0sXG4gICAgbW92ZTogZnVuY3Rpb24oZXZlbnQpIHtcblxuICAgICAgLy8gZW5zdXJlIHN3aXBpbmcgd2l0aCBvbmUgdG91Y2ggYW5kIG5vdCBwaW5jaGluZ1xuICAgICAgaWYgKCBldmVudC50b3VjaGVzLmxlbmd0aCA+IDEgfHwgZXZlbnQuc2NhbGUgJiYgZXZlbnQuc2NhbGUgIT09IDEpIHJldHVyblxuXG4gICAgICBpZiAob3B0aW9ucy5kaXNhYmxlU2Nyb2xsKSBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICB2YXIgdG91Y2hlcyA9IGV2ZW50LnRvdWNoZXNbMF07XG5cbiAgICAgIC8vIG1lYXN1cmUgY2hhbmdlIGluIHggYW5kIHlcbiAgICAgIGRlbHRhID0ge1xuICAgICAgICB4OiB0b3VjaGVzLnBhZ2VYIC0gc3RhcnQueCxcbiAgICAgICAgeTogdG91Y2hlcy5wYWdlWSAtIHN0YXJ0LnlcbiAgICAgIH1cblxuICAgICAgLy8gZGV0ZXJtaW5lIGlmIHNjcm9sbGluZyB0ZXN0IGhhcyBydW4gLSBvbmUgdGltZSB0ZXN0XG4gICAgICBpZiAoIHR5cGVvZiBpc1Njcm9sbGluZyA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpc1Njcm9sbGluZyA9ICEhKCBpc1Njcm9sbGluZyB8fCBNYXRoLmFicyhkZWx0YS54KSA8IE1hdGguYWJzKGRlbHRhLnkpICk7XG4gICAgICB9XG5cbiAgICAgIC8vIGlmIHVzZXIgaXMgbm90IHRyeWluZyB0byBzY3JvbGwgdmVydGljYWxseVxuICAgICAgaWYgKCFpc1Njcm9sbGluZykge1xuXG4gICAgICAgIC8vIHByZXZlbnQgbmF0aXZlIHNjcm9sbGluZ1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIC8vIHN0b3Agc2xpZGVzaG93XG4gICAgICAgIHN0b3AoKTtcblxuICAgICAgICAvLyBpbmNyZWFzZSByZXNpc3RhbmNlIGlmIGZpcnN0IG9yIGxhc3Qgc2xpZGVcbiAgICAgICAgaWYgKG9wdGlvbnMuY29udGludW91cykgeyAvLyB3ZSBkb24ndCBhZGQgcmVzaXN0YW5jZSBhdCB0aGUgZW5kXG5cbiAgICAgICAgICB0cmFuc2xhdGUoY2lyY2xlKGluZGV4LTEpLCBkZWx0YS54ICsgc2xpZGVQb3NbY2lyY2xlKGluZGV4LTEpXSwgMCk7XG4gICAgICAgICAgdHJhbnNsYXRlKGluZGV4LCBkZWx0YS54ICsgc2xpZGVQb3NbaW5kZXhdLCAwKTtcbiAgICAgICAgICB0cmFuc2xhdGUoY2lyY2xlKGluZGV4KzEpLCBkZWx0YS54ICsgc2xpZGVQb3NbY2lyY2xlKGluZGV4KzEpXSwgMCk7XG5cbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgIGRlbHRhLnggPVxuICAgICAgICAgICAgZGVsdGEueCAvXG4gICAgICAgICAgICAgICggKCFpbmRleCAmJiBkZWx0YS54ID4gMCAgICAgICAgICAgICAgIC8vIGlmIGZpcnN0IHNsaWRlIGFuZCBzbGlkaW5nIGxlZnRcbiAgICAgICAgICAgICAgICB8fCBpbmRleCA9PSBzbGlkZXMubGVuZ3RoIC0gMSAgICAgICAgLy8gb3IgaWYgbGFzdCBzbGlkZSBhbmQgc2xpZGluZyByaWdodFxuICAgICAgICAgICAgICAgICYmIGRlbHRhLnggPCAwICAgICAgICAgICAgICAgICAgICAgICAvLyBhbmQgaWYgc2xpZGluZyBhdCBhbGxcbiAgICAgICAgICAgICAgKSA/XG4gICAgICAgICAgICAgICggTWF0aC5hYnMoZGVsdGEueCkgLyB3aWR0aCArIDEgKSAgICAgIC8vIGRldGVybWluZSByZXNpc3RhbmNlIGxldmVsXG4gICAgICAgICAgICAgIDogMSApOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vIHJlc2lzdGFuY2UgaWYgZmFsc2VcblxuICAgICAgICAgIC8vIHRyYW5zbGF0ZSAxOjFcbiAgICAgICAgICB0cmFuc2xhdGUoaW5kZXgtMSwgZGVsdGEueCArIHNsaWRlUG9zW2luZGV4LTFdLCAwKTtcbiAgICAgICAgICB0cmFuc2xhdGUoaW5kZXgsIGRlbHRhLnggKyBzbGlkZVBvc1tpbmRleF0sIDApO1xuICAgICAgICAgIHRyYW5zbGF0ZShpbmRleCsxLCBkZWx0YS54ICsgc2xpZGVQb3NbaW5kZXgrMV0sIDApO1xuICAgICAgICB9XG5cbiAgICAgIH1cblxuICAgIH0sXG4gICAgZW5kOiBmdW5jdGlvbihldmVudCkge1xuXG4gICAgICAvLyBtZWFzdXJlIGR1cmF0aW9uXG4gICAgICB2YXIgZHVyYXRpb24gPSArbmV3IERhdGUgLSBzdGFydC50aW1lO1xuXG4gICAgICAvLyBkZXRlcm1pbmUgaWYgc2xpZGUgYXR0ZW1wdCB0cmlnZ2VycyBuZXh0L3ByZXYgc2xpZGVcbiAgICAgIHZhciBpc1ZhbGlkU2xpZGUgPVxuICAgICAgICAgICAgTnVtYmVyKGR1cmF0aW9uKSA8IDI1MCAgICAgICAgICAgICAgIC8vIGlmIHNsaWRlIGR1cmF0aW9uIGlzIGxlc3MgdGhhbiAyNTBtc1xuICAgICAgICAgICAgJiYgTWF0aC5hYnMoZGVsdGEueCkgPiAyMCAgICAgICAgICAgIC8vIGFuZCBpZiBzbGlkZSBhbXQgaXMgZ3JlYXRlciB0aGFuIDIwcHhcbiAgICAgICAgICAgIHx8IE1hdGguYWJzKGRlbHRhLngpID4gd2lkdGgvMjsgICAgICAvLyBvciBpZiBzbGlkZSBhbXQgaXMgZ3JlYXRlciB0aGFuIGhhbGYgdGhlIHdpZHRoXG5cbiAgICAgIC8vIGRldGVybWluZSBpZiBzbGlkZSBhdHRlbXB0IGlzIHBhc3Qgc3RhcnQgYW5kIGVuZFxuICAgICAgdmFyIGlzUGFzdEJvdW5kcyA9XG4gICAgICAgICAgICAhaW5kZXggJiYgZGVsdGEueCA+IDAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgZmlyc3Qgc2xpZGUgYW5kIHNsaWRlIGFtdCBpcyBncmVhdGVyIHRoYW4gMFxuICAgICAgICAgICAgfHwgaW5kZXggPT0gc2xpZGVzLmxlbmd0aCAtIDEgJiYgZGVsdGEueCA8IDA7ICAgIC8vIG9yIGlmIGxhc3Qgc2xpZGUgYW5kIHNsaWRlIGFtdCBpcyBsZXNzIHRoYW4gMFxuXG4gICAgICBpZiAob3B0aW9ucy5jb250aW51b3VzKSBpc1Bhc3RCb3VuZHMgPSBmYWxzZTtcblxuICAgICAgLy8gZGV0ZXJtaW5lIGRpcmVjdGlvbiBvZiBzd2lwZSAodHJ1ZTpyaWdodCwgZmFsc2U6bGVmdClcbiAgICAgIHZhciBkaXJlY3Rpb24gPSBkZWx0YS54IDwgMDtcblxuICAgICAgLy8gaWYgbm90IHNjcm9sbGluZyB2ZXJ0aWNhbGx5XG4gICAgICBpZiAoIWlzU2Nyb2xsaW5nKSB7XG5cbiAgICAgICAgaWYgKGlzVmFsaWRTbGlkZSAmJiAhaXNQYXN0Qm91bmRzKSB7XG5cbiAgICAgICAgICBpZiAoZGlyZWN0aW9uKSB7XG5cbiAgICAgICAgICAgIGlmIChvcHRpb25zLmNvbnRpbnVvdXMpIHsgLy8gd2UgbmVlZCB0byBnZXQgdGhlIG5leHQgaW4gdGhpcyBkaXJlY3Rpb24gaW4gcGxhY2VcblxuICAgICAgICAgICAgICBtb3ZlKGNpcmNsZShpbmRleC0xKSwgLXdpZHRoLCAwKTtcbiAgICAgICAgICAgICAgbW92ZShjaXJjbGUoaW5kZXgrMiksIHdpZHRoLCAwKTtcblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgbW92ZShpbmRleC0xLCAtd2lkdGgsIDApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBtb3ZlKGluZGV4LCBzbGlkZVBvc1tpbmRleF0td2lkdGgsIHNwZWVkKTtcbiAgICAgICAgICAgIG1vdmUoY2lyY2xlKGluZGV4KzEpLCBzbGlkZVBvc1tjaXJjbGUoaW5kZXgrMSldLXdpZHRoLCBzcGVlZCk7XG4gICAgICAgICAgICBpbmRleCA9IGNpcmNsZShpbmRleCsxKTtcblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucy5jb250aW51b3VzKSB7IC8vIHdlIG5lZWQgdG8gZ2V0IHRoZSBuZXh0IGluIHRoaXMgZGlyZWN0aW9uIGluIHBsYWNlXG5cbiAgICAgICAgICAgICAgbW92ZShjaXJjbGUoaW5kZXgrMSksIHdpZHRoLCAwKTtcbiAgICAgICAgICAgICAgbW92ZShjaXJjbGUoaW5kZXgtMiksIC13aWR0aCwgMCk7XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG1vdmUoaW5kZXgrMSwgd2lkdGgsIDApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBtb3ZlKGluZGV4LCBzbGlkZVBvc1tpbmRleF0rd2lkdGgsIHNwZWVkKTtcbiAgICAgICAgICAgIG1vdmUoY2lyY2xlKGluZGV4LTEpLCBzbGlkZVBvc1tjaXJjbGUoaW5kZXgtMSldK3dpZHRoLCBzcGVlZCk7XG4gICAgICAgICAgICBpbmRleCA9IGNpcmNsZShpbmRleC0xKTtcblxuICAgICAgICAgIH1cblxuICAgICAgICAgIG9wdGlvbnMuY2FsbGJhY2sgJiYgb3B0aW9ucy5jYWxsYmFjayhpbmRleCwgc2xpZGVzW2luZGV4XSk7XG5cbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgIGlmIChvcHRpb25zLmNvbnRpbnVvdXMpIHtcblxuICAgICAgICAgICAgbW92ZShjaXJjbGUoaW5kZXgtMSksIC13aWR0aCwgc3BlZWQpO1xuICAgICAgICAgICAgbW92ZShpbmRleCwgMCwgc3BlZWQpO1xuICAgICAgICAgICAgbW92ZShjaXJjbGUoaW5kZXgrMSksIHdpZHRoLCBzcGVlZCk7XG5cbiAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICBtb3ZlKGluZGV4LTEsIC13aWR0aCwgc3BlZWQpO1xuICAgICAgICAgICAgbW92ZShpbmRleCwgMCwgc3BlZWQpO1xuICAgICAgICAgICAgbW92ZShpbmRleCsxLCB3aWR0aCwgc3BlZWQpO1xuICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgIH1cblxuICAgICAgLy8ga2lsbCB0b3VjaG1vdmUgYW5kIHRvdWNoZW5kIGV2ZW50IGxpc3RlbmVycyB1bnRpbCB0b3VjaHN0YXJ0IGNhbGxlZCBhZ2FpblxuICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBldmVudHMsIGZhbHNlKVxuICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIGV2ZW50cywgZmFsc2UpXG5cbiAgICB9LFxuICAgIHRyYW5zaXRpb25FbmQ6IGZ1bmN0aW9uKGV2ZW50KSB7XG5cbiAgICAgIGlmIChwYXJzZUludChldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLWluZGV4JyksIDEwKSA9PSBpbmRleCkge1xuXG4gICAgICAgIGlmIChkZWxheSkgYmVnaW4oKTtcblxuICAgICAgICBvcHRpb25zLnRyYW5zaXRpb25FbmQgJiYgb3B0aW9ucy50cmFuc2l0aW9uRW5kLmNhbGwoZXZlbnQsIGluZGV4LCBzbGlkZXNbaW5kZXhdKTtcblxuICAgICAgfVxuXG4gICAgfVxuXG4gIH1cblxuICAvLyB0cmlnZ2VyIHNldHVwXG4gIHNldHVwKCk7XG5cbiAgLy8gc3RhcnQgYXV0byBzbGlkZXNob3cgaWYgYXBwbGljYWJsZVxuICBpZiAoZGVsYXkpIGJlZ2luKCk7XG5cblxuICAvLyBhZGQgZXZlbnQgbGlzdGVuZXJzXG4gIGlmIChicm93c2VyLmFkZEV2ZW50TGlzdGVuZXIpIHtcblxuICAgIC8vIHNldCB0b3VjaHN0YXJ0IGV2ZW50IG9uIGVsZW1lbnRcbiAgICBpZiAoYnJvd3Nlci50b3VjaCkgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgZXZlbnRzLCBmYWxzZSk7XG5cbiAgICBpZiAoYnJvd3Nlci50cmFuc2l0aW9ucykge1xuICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd3ZWJraXRUcmFuc2l0aW9uRW5kJywgZXZlbnRzLCBmYWxzZSk7XG4gICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21zVHJhbnNpdGlvbkVuZCcsIGV2ZW50cywgZmFsc2UpO1xuICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdvVHJhbnNpdGlvbkVuZCcsIGV2ZW50cywgZmFsc2UpO1xuICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdvdHJhbnNpdGlvbmVuZCcsIGV2ZW50cywgZmFsc2UpO1xuICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgZXZlbnRzLCBmYWxzZSk7XG4gICAgfVxuXG4gICAgLy8gc2V0IHJlc2l6ZSBldmVudCBvbiB3aW5kb3dcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZXZlbnRzLCBmYWxzZSk7XG5cbiAgfSBlbHNlIHtcblxuICAgIHdpbmRvdy5vbnJlc2l6ZSA9IGZ1bmN0aW9uICgpIHsgc2V0dXAoKSB9OyAvLyB0byBwbGF5IG5pY2Ugd2l0aCBvbGQgSUVcblxuICB9XG5cbiAgLy8gZXhwb3NlIHRoZSBTd2lwZSBBUElcbiAgcmV0dXJuIHtcbiAgICBzZXR1cDogZnVuY3Rpb24oKSB7XG5cbiAgICAgIHNldHVwKCk7XG5cbiAgICB9LFxuICAgIHNsaWRlOiBmdW5jdGlvbih0bywgc3BlZWQpIHtcblxuICAgICAgLy8gY2FuY2VsIHNsaWRlc2hvd1xuICAgICAgc3RvcCgpO1xuXG4gICAgICBzbGlkZSh0bywgc3BlZWQpO1xuXG4gICAgfSxcbiAgICBwcmV2OiBmdW5jdGlvbigpIHtcblxuICAgICAgLy8gY2FuY2VsIHNsaWRlc2hvd1xuICAgICAgc3RvcCgpO1xuXG4gICAgICBwcmV2KCk7XG5cbiAgICB9LFxuICAgIG5leHQ6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAvLyBjYW5jZWwgc2xpZGVzaG93XG4gICAgICBzdG9wKCk7XG5cbiAgICAgIG5leHQoKTtcblxuICAgIH0sXG4gICAgc3RvcDogZnVuY3Rpb24oKSB7XG5cbiAgICAgIC8vIGNhbmNlbCBzbGlkZXNob3dcbiAgICAgIHN0b3AoKTtcblxuICAgIH0sXG4gICAgZ2V0UG9zOiBmdW5jdGlvbigpIHtcblxuICAgICAgLy8gcmV0dXJuIGN1cnJlbnQgaW5kZXggcG9zaXRpb25cbiAgICAgIHJldHVybiBpbmRleDtcblxuICAgIH0sXG4gICAgZ2V0TnVtU2xpZGVzOiBmdW5jdGlvbigpIHtcblxuICAgICAgLy8gcmV0dXJuIHRvdGFsIG51bWJlciBvZiBzbGlkZXNcbiAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfSxcbiAgICBraWxsOiBmdW5jdGlvbigpIHtcblxuICAgICAgLy8gY2FuY2VsIHNsaWRlc2hvd1xuICAgICAgc3RvcCgpO1xuXG4gICAgICAvLyByZXNldCBlbGVtZW50XG4gICAgICBlbGVtZW50LnN0eWxlLndpZHRoID0gJyc7XG4gICAgICBlbGVtZW50LnN0eWxlLmxlZnQgPSAnJztcblxuICAgICAgLy8gcmVzZXQgc2xpZGVzXG4gICAgICB2YXIgcG9zID0gc2xpZGVzLmxlbmd0aDtcbiAgICAgIHdoaWxlKHBvcy0tKSB7XG5cbiAgICAgICAgdmFyIHNsaWRlID0gc2xpZGVzW3Bvc107XG4gICAgICAgIHNsaWRlLnN0eWxlLndpZHRoID0gJyc7XG4gICAgICAgIHNsaWRlLnN0eWxlLmxlZnQgPSAnJztcblxuICAgICAgICBpZiAoYnJvd3Nlci50cmFuc2l0aW9ucykgdHJhbnNsYXRlKHBvcywgMCwgMCk7XG5cbiAgICAgIH1cblxuICAgICAgLy8gcmVtb3ZlZCBldmVudCBsaXN0ZW5lcnNcbiAgICAgIGlmIChicm93c2VyLmFkZEV2ZW50TGlzdGVuZXIpIHtcblxuICAgICAgICAvLyByZW1vdmUgY3VycmVudCBldmVudCBsaXN0ZW5lcnNcbiAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgZXZlbnRzLCBmYWxzZSk7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0VHJhbnNpdGlvbkVuZCcsIGV2ZW50cywgZmFsc2UpO1xuICAgICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21zVHJhbnNpdGlvbkVuZCcsIGV2ZW50cywgZmFsc2UpO1xuICAgICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ29UcmFuc2l0aW9uRW5kJywgZXZlbnRzLCBmYWxzZSk7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignb3RyYW5zaXRpb25lbmQnLCBldmVudHMsIGZhbHNlKTtcbiAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgZXZlbnRzLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBldmVudHMsIGZhbHNlKTtcblxuICAgICAgfVxuICAgICAgZWxzZSB7XG5cbiAgICAgICAgd2luZG93Lm9ucmVzaXplID0gbnVsbDtcblxuICAgICAgfVxuXG4gICAgfVxuICB9XG5cbn1cblxuXG5pZiAoIHdpbmRvdy5qUXVlcnkgfHwgd2luZG93LlplcHRvICkge1xuICAoZnVuY3Rpb24oJCkge1xuICAgICQuZm4uU3dpcGUgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICQodGhpcykuZGF0YSgnU3dpcGUnLCBuZXcgU3dpcGUoJCh0aGlzKVswXSwgcGFyYW1zKSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pKCB3aW5kb3cualF1ZXJ5IHx8IHdpbmRvdy5aZXB0byApXG59XG4iLCJmdW5jdGlvbiBkaXN0YW5jZU9mVGltZUluV29yZHMoZnJvbVRpbWUsIHRvVGltZSwgaW5jbHVkZVNlY29uZHMpIHtcbiAgdmFyIGZyb21TZWNvbmRzID0gZnJvbVRpbWUuZ2V0VGltZSgpO1xuICB2YXIgdG9TZWNvbmRzID0gdG9UaW1lLmdldFRpbWUoKTtcbiAgdmFyIGRpc3RhbmNlSW5TZWNvbmRzID0gTWF0aC5yb3VuZChNYXRoLmFicyhmcm9tU2Vjb25kcyAtIHRvU2Vjb25kcykgLyAxMDAwKTtcbiAgdmFyIGRpc3RhbmNlSW5NaW51dGVzID0gTWF0aC5yb3VuZChkaXN0YW5jZUluU2Vjb25kcyAvIDYwKTtcbiAgaWYgKGRpc3RhbmNlSW5NaW51dGVzIDw9IDEpIHtcbiAgICBpZiAoIWluY2x1ZGVTZWNvbmRzKVxuICAgICAgcmV0dXJuIChkaXN0YW5jZUluTWludXRlcyA9PT0gMCkgPyAnbWluZGVyIGRhbiBlZW4gbWludXV0JyA6ICcxIG1pbnV1dCc7XG4gICAgaWYgKGRpc3RhbmNlSW5TZWNvbmRzIDwgNSlcbiAgICAgIHJldHVybiAnNSBzZWNvbmRlIGdlbGVkZW4nO1xuICAgIGlmIChkaXN0YW5jZUluU2Vjb25kcyA8IDEwKVxuICAgICAgcmV0dXJuICcxMCBzZWNvbmRlIGdlbGVkZW4nO1xuICAgIGlmIChkaXN0YW5jZUluU2Vjb25kcyA8IDIwKVxuICAgICAgcmV0dXJuICcyMCBzZWNvbmRlIGdlbGVkZW4nO1xuICAgIGlmIChkaXN0YW5jZUluU2Vjb25kcyA8IDQwKVxuICAgICAgcmV0dXJuICczMCBzZWNvbmRlIGdlbGVkZW4nO1xuICAgIGlmIChkaXN0YW5jZUluU2Vjb25kcyA8IDYwKVxuICAgICAgcmV0dXJuICdlZW4gbWludXV0IGdlbGVkZW4nO1xuICAgIGVsc2VcbiAgICAgIHJldHVybiAnMSBtaW51dXQgZ2VsZWRlbic7XG4gIH1cblxuICBpZiAoZGlzdGFuY2VJbk1pbnV0ZXMgPCA0NSlcbiAgICByZXR1cm4gZGlzdGFuY2VJbk1pbnV0ZXMgKyAnIG1pbnV0ZW4gZ2VsZWRlbic7XG4gIGlmIChkaXN0YW5jZUluTWludXRlcyA8IDcwKVxuICAgIHJldHVybiAnMSB1dXIgZ2VsZWRlbic7XG4gIGlmIChkaXN0YW5jZUluTWludXRlcyA8IDE0NDApXG4gICAgcmV0dXJuIChNYXRoLnJvdW5kKGRpc3RhbmNlSW5NaW51dGVzIC8gNjApKSArICcgdXVyIGdlbGVkZW4nO1xuICBpZiAoZGlzdGFuY2VJbk1pbnV0ZXMgPCAyODgwKVxuICAgIHJldHVybiAnMSBkYWcgZ2VsZWRlbic7XG4gIGlmIChkaXN0YW5jZUluTWludXRlcyA8IDQzMjAwKVxuICAgIHJldHVybiAoTWF0aC5yb3VuZChkaXN0YW5jZUluTWludXRlcyAvIDE0NDApKSArICcgZGFnZW4gZ2VsZWRlbic7XG4gIGlmIChkaXN0YW5jZUluTWludXRlcyA8IDg2NDAwKVxuICAgIHJldHVybiAncnVpbSAxIG1hYW5kIGdlbGVkZW4nO1xuICBpZiAoZGlzdGFuY2VJbk1pbnV0ZXMgPCA1MjU2MDApXG4gICAgcmV0dXJuIChNYXRoLnJvdW5kKGRpc3RhbmNlSW5NaW51dGVzIC8gNDMyMDApKSArICcgbWFhbmRlbiBnZWxlZGVuJztcbiAgZWxzZVxuICAgIHJldHVybiAoTWF0aC5yb3VuZChkaXN0YW5jZUluTWludXRlcyAvIDUyNTYwMCkpICsgJyBqYXJlbiBnZWxlZGVuJztcbn07XG5cbi8vVHdpdHRlciBQYXJzZXJzXG5TdHJpbmcucHJvdG90eXBlLnBhcnNlVVJMID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5yZXBsYWNlKC9bQS1aYS16XSs6XFwvXFwvW0EtWmEtejAtOS1fXStcXC5bQS1aYS16MC05LV86JSZ+XFw/XFwvLj1dKy9nLCBmdW5jdGlvbiAodSkge1xuICAgIHJldHVybiB1LmxpbmsodSkub3BlblVybEJsYW5rKCk7XG4gIH0pO1xufTtcblxuU3RyaW5nLnByb3RvdHlwZS5wYXJzZVVzZXJuYW1lID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5yZXBsYWNlKC9bQF0rW0EtWmEtejAtOS1fXSsvZywgZnVuY3Rpb24oIHUgKSB7XG4gICAgdmFyIHVzZXJuYW1lID0gdS5yZXBsYWNlKFwiQFwiLFwiXCIpO1xuICAgIFxuICAgIHJldHVybiB1LmxpbmsoICdodHRwOi8vdHdpdHRlci5jb20vJyArIHVzZXJuYW1lICkub3BlblVybEJsYW5rKCk7XG4gIH0pO1xufTtcblxuU3RyaW5nLnByb3RvdHlwZS5wYXJzZUhhc2h0YWcgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLnJlcGxhY2UoL1sjXStbQS1aYS16MC05LV9dKy9nLCBmdW5jdGlvbiggdCApIHtcbiAgICB2YXIgdGFnID0gdC5yZXBsYWNlKFwiI1wiLFwiJTIzXCIpO1xuICAgIHJldHVybiB0LmxpbmsoICdodHRwOi8vc2VhcmNoLnR3aXR0ZXIuY29tL3NlYXJjaD9xPScgKyB0YWcgKS5vcGVuVXJsQmxhbmsoKTtcbiAgfSk7XG59O1xuXG5TdHJpbmcucHJvdG90eXBlLnBhcnNlRGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIG5ld3RleHQgPSB0aGlzLnJlcGxhY2UoLyhcXCtcXFMrKSAoLiopLywgJyQyICQxJyk7XG4gIHZhciBkYXRlID0gbmV3IERhdGUoRGF0ZS5wYXJzZShuZXd0ZXh0KSk7XG4gIHJldHVybiBkYXRlO1xufTtcblxuU3RyaW5nLnByb3RvdHlwZS5vcGVuVXJsQmxhbmsgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLnJlcGxhY2UoL148YS8sICckJiB0YXJnZXQ9XCJfYmxhbmtcIicpO1xufVxuXG5mdW5jdGlvbiBwcm9jZXNzVHdlZXRzKGRhdGEsIHVuaXF1ZSkge1xuICB2YXIgdHdlZXRzID0gW107XG4gICQuZWFjaChkYXRhLCBmdW5jdGlvbiAoaSwgb2JqKSB7XG4gICAgdmFyIGVsZW1lbnQgPSBvYmo7XG4gICAgXG4gICAgaWYoIWVsZW1lbnQuaGFzRXh0ZXJuYWxVcmwpIHtcbiAgICAgIG9iai50ZXh0ID0gb2JqLnRleHQucGFyc2VVUkwoKTtcbiAgICB9XG4gICAgZWxlbWVudC50ZXh0ID0gb2JqLnRleHQucGFyc2VVc2VybmFtZSgpLnBhcnNlSGFzaHRhZygpO1xuICAgIHZhciBjcmVhdGVkID0gZWxlbWVudC5jcmVhdGVkLnBhcnNlRGF0ZSgpO1xuICAgIGRlbGV0ZSBlbGVtZW50LmNyZWF0ZWQ7XG4gICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7XG5cbiAgICBlbGVtZW50LmRhdGUgPSBkaXN0YW5jZU9mVGltZUluV29yZHMobm93LCBjcmVhdGVkLCB0cnVlKSArICcgZ2VwbGFhdHN0JztcbiAgICBlbGVtZW50LnR3ZWV0VXJsID0gJ2h0dHBzOi8vdHdpdHRlci5jb20vdXNlci9zdGF0dXMvJyArIGVsZW1lbnQudHdlZXRJZDtcbiAgICBlbGVtZW50LnJldHdlZXRVcmwgPSAnaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvcmV0d2VldD90d2VldF9pZD0nICsgZWxlbWVudC50d2VldElkO1xuICAgIGVsZW1lbnQucmVwbHlVcmwgPSAnaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvdHdlZXQ/aW5fcmVwbHlfdG89JyArIGVsZW1lbnQudHdlZXRJZDtcbiAgICBlbGVtZW50Lmxpa2VVcmwgPSAnaHR0cHM6Ly90d2l0dGVyLmNvbS9pbnRlbnQvbGlrZT90d2VldF9pZD0nICsgZWxlbWVudC50d2VldElkO1xuICAgIGVsZW1lbnQuZm9sbG93VXJsID0gJ2h0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L2ZvbGxvdz9zY3JlZW5fbmFtZT0nICsgZWxlbWVudC5zY3JlZW5OYW1lO1xuICAgIHR3ZWV0cy5wdXNoKGVsZW1lbnQpO1xuICB9KTtcbiAgcmV0dXJuIHR3ZWV0cztcbn07XG4iLCIoZnVuY3Rpb24gKCkge1xuXG4gIC8vIGFwcCBuYW1lc3BhY2Ugc2V0dXBcbiAgQVBQID0ge1xuICAgIFZpZXdzOiB7fSxcbiAgICBZb3VUdWJlOiB7fVxuICB9O1xuXG59KSgpO1xuIiwiLy8gZm9yIGpzaGludFxuLypnbG9iYWwgcmVxdWlyZSwgZGVmaW5lICovXG5cbihmdW5jdGlvbihyb290LCBmYWN0b3J5KSB7XG4gIC8vIFN0YXJ0IHdpdGggQU1EIHN1cHBvcnQuXG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoWyd1bmRlcnNjb3JlJywgJ2JhY2tib25lJ10sIGZ1bmN0aW9uKF8sIEJhY2tib25lKSB7XG4gICAgICBmYWN0b3J5KHJvb3QsIF8sIEJhY2tib25lKTtcbiAgICB9KTtcblxuICAvLyBOZXh0IGNoZWNrIGZvciBOb2RlLmpzIG9yIENvbW1vbkpTLlxuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBfID0gcmVxdWlyZSgndW5kZXJzY29yZScpO1xuICAgIHZhciBCYWNrYm9uZSA9IHJlcXVpcmUoJ2JhY2tib25lJyk7XG4gICAgZmFjdG9yeShyb290LCBfLCBCYWNrYm9uZSk7XG5cbiAgLy8gRmlubmFseSwgaWYgbm9uZSBvZiB0aGUgYWJvdmUsIGNyZWF0ZSB0aGUgZXh0ZW5zaW9uIGFuZFxuICAvLyBhc3N1bWUgQmFja2JvbmUgaXMgYXZhaWxhYmxlIGF0IChicm93c2VyKSBnbG9iYWwgc2NvcGUuXG4gIH0gZWxzZSB7XG4gICAgZmFjdG9yeShyb290LCByb290Ll8sIHJvb3QuQmFja2JvbmUpO1xuICB9XG59KHRoaXMsIGZ1bmN0aW9uKHJvb3QsIF8sIEJhY2tib25lKSB7XG5cbiAgLy8gQmFja2JvbmUuVmlld1N0YXRlXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vIGBCYWNrYm9uZS5WaWV3U3RhdGVgIG9iamVjdHMgYXJlIGRlc2lnbmVkIHRvIGJlIG5vdGhpbmcgbW9yZSBidXRcbiAgLy8gYSB3cmFwcGVyIHRoYXQgaXMgbm90IGEgTW9kZWwgYnV0IGRvZXMgbmVlZCB0byAnaG9sZCcgZGF0YS5cbiAgLy8gQW4gZXhhbXBsZSBvZiBhIFZpZXdTdGF0ZSB2YWx1ZSBpcyB3aGVuIHlvdXIgbW91c2Ugb3IgZmluZ2VyXG4gIC8vIGlzIGhvdmVyaW5nIG92ZXIgc29tZSB0YXJnZXQgdG8gYWRkIGB7b3ZlcjogdHJ1ZX1gIHRvIHRoZSB2aWV3U3RhdGUuXG4gIC8vIFRoZSBpZGVhIGJlaGluZCBpdCBpcyB0aGF0IHlvdSBjYW4gdXNlIGdldEF0dHJpYnV0ZXMgYXMgZGVmYXVsdFxuICAvLyBmb3IgZGF0YSBpbiB5b3VyIHJlbmRlciBmdW5jdGlvbi5cblxuICAvLyBGb3IgZXhhbXBsZTpcbiAgLy9cbiAgLy8gICAgIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gIC8vICAgICAgIHRoaXMuZWwuaHRtbCh0ZW1wbGF0ZShfLmV4dGVuZChcbiAgLy8gICAgICAgICAgdGhpcy52aWV3U3RhdGUuZ2V0QXR0cmlidXRlcygpLFxuICAvLyAgICAgICAgICB0aGlzLm1vZGVsLnRvSlNPTigpXG4gIC8vICAgICAgICkpKTtcbiAgLy8gICAgIH1cbiAgLy9cbiAgdmFyIFZpZXdTdGF0ZSA9IEJhY2tib25lLlZpZXdTdGF0ZSA9IGZ1bmN0aW9uKGF0dHJpYnV0ZXMpIHtcbiAgICB2YXIgYXR0cnMgPSBhdHRyaWJ1dGVzIHx8IHt9O1xuICAgIHRoaXMuYXR0cmlidXRlcyA9IF8uY2xvbmUoYXR0cnMpO1xuICB9O1xuXG4gIF8uZXh0ZW5kKFZpZXdTdGF0ZS5wcm90b3R5cGUsIEJhY2tib25lLkV2ZW50cywge1xuICAgIC8vIGdldCB0aGUgdmFsdWUgb2YgYW4gYXR0cmlidXRlXG4gICAgZ2V0OiBmdW5jdGlvbihhdHRyKSB7XG4gICAgICByZXR1cm4gdGhpcy5hdHRyaWJ1dGVzW2F0dHJdO1xuICAgIH0sXG5cbiAgICAvLyByZXR1cm5zIGFsbCBhdHRyaWJ1dGVzIChsaWtlIHRvSlNPTiwgYnV0IHRoaXMgYWxyZWFkeSBpcyAncG9qbycpXG4gICAgZ2V0QXR0cmlidXRlczogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gXy5jbG9uZSh0aGlzLmF0dHJpYnV0ZXMpO1xuICAgIH0sXG5cbiAgICAvLyBTZXQgYSBoYXNoIG9mIGF0dHJpYnV0ZXMgb24gdGhlIG9iamVjdCAoZmlyaW5nIGBjaGFuZ2VgKS4gVGhpcyBpc1xuICAgIC8vIHRoZSBjb3JlIG9wZXJhdGlvbiBvZiBhIHZpZXdTdGF0ZSBvYmplY3QsIHVwZGF0aW5nIHRoZSBkYXRhIGFuZFxuICAgIC8vIG5vdGlmeWluZyBhbnlvbmUgd2hvIG5lZWRzIHRvIGtub3cgYWJvdXQgdGhlIGNoYW5nZS5cbiAgICBzZXQ6IGZ1bmN0aW9uKGtleSwgdmFsLCBvcHRpb25zKSB7XG4gICAgICB2YXIgYXR0cnMsIGF0dHIsIGN1cnJlbnQsIHNpbGVudCwgdW5zZXQsIGNoYW5nZXMgPSBbXTtcbiAgICAgIGlmIChrZXkgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG5cbiAgICAgIC8vIExpa2UgaW4gQmFja2JvbmUuTW9kZWwsIHlvdSBjYW4gc3VwcGx5IGJvdGggYHtrZXk6IHZhbHVlfWAgYXNcbiAgICAgIC8vIGBcImtleVwiLCB2YWx1ZWAtc3R5bGUgYXJndW1lbnRzLlxuICAgICAgaWYgKHR5cGVvZiBrZXkgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGF0dHJzID0ga2V5O1xuICAgICAgICBvcHRpb25zID0gdmFsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgKGF0dHJzID0ge30pW2tleV0gPSB2YWw7XG4gICAgICB9XG5cbiAgICAgIG9wdGlvbnMgfHwgKG9wdGlvbnMgPSB7fSk7XG5cbiAgICAgIHVuc2V0ICAgPSBvcHRpb25zLnVuc2V0O1xuICAgICAgc2lsZW50ICA9IG9wdGlvbnMuc2lsZW50O1xuICAgICAgY3VycmVudCA9IHRoaXMuYXR0cmlidXRlcztcblxuICAgICAgZm9yIChhdHRyIGluIGF0dHJzKSB7XG4gICAgICAgIHZhbCA9IGF0dHJzW2F0dHJdO1xuICAgICAgICBpZiAoIV8uaXNFcXVhbChjdXJyZW50W2F0dHJdLCB2YWwpKSB7XG4gICAgICAgICAgY2hhbmdlcy5wdXNoKGF0dHIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1bnNldCkge1xuICAgICAgICAgIGRlbGV0ZSBjdXJyZW50W2F0dHJdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGN1cnJlbnRbYXR0cl0gPSB2YWw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFzaWxlbnQpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjaGFuZ2VzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgIHRoaXMudHJpZ2dlcignY2hhbmdlOicrIGNoYW5nZXNbaV0sIHRoaXMsIGN1cnJlbnRbY2hhbmdlc1tpXV0sIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudHJpZ2dlcignY2hhbmdlJywgdGhpcywgb3B0aW9ucyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgLy8gUmVtb3ZlIGFuIGF0dHJpYnV0ZSBmcm9tIHRoZSBvYmplY3QsIGFsc28gZmlyaW5nIGEgYGNoYW5nZWAuXG4gICAgdW5zZXQ6IGZ1bmN0aW9uKGF0dHIsIG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLnNldChhdHRyLCB2b2lkIDAsIF8uZXh0ZW5kKHt9LCBvcHRpb25zLCB7dW5zZXQ6IHRydWV9KSk7XG4gICAgfSxcblxuICAgIC8vIENsZWFyIGFsbCBhdHRyaWJ1dGVzIG9mZiB0aGlzIG1vZGVsLCBhbHNvIGZpcmluZyBgY2hhbmdlYFxuICAgIGNsZWFyOiBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICB2YXIgYXR0cnMgPSB7fTtcbiAgICAgIGZvciAodmFyIGtleSBpbiB0aGlzLmF0dHJpYnV0ZXMpIHtcbiAgICAgICAgYXR0cnNba2V5XSA9IHZvaWQgMDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLnNldChhdHRycywgXy5leHRlbmQoe30sIG9wdGlvbnMsIHt1bnNldDogdHJ1ZX0pKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBCYWNrYm9uZS5WaWV3U3RhdGU7XG59KSk7XG4iLCJBUFAuU3RvcmUgPSAoZnVuY3Rpb24gKF8sIEJhY2tib25lKSB7XG5cbiAgdmFyIHNsaWRlQ29sbGVjdGlvbiA9IG5ldyBCYWNrYm9uZS5Db2xsZWN0aW9uKCk7XG5cbiAgdmFyIHN0YXRlID0gbmV3IEJhY2tib25lLlZpZXdTdGF0ZSh7XG4gICAgYWN0aXZlSW5kZXg6IC0xXG4gIH0pO1xuXG5cbiAgcmV0dXJuIHtcbiAgICBzdGFydDogZnVuY3Rpb24oZGF0YUpzb24pIHtcbiAgICAgIHNsaWRlQ29sbGVjdGlvbi5yZXNldChkYXRhSnNvbik7XG4gICAgICBzbGlkZUNvbGxlY3Rpb24uaW52b2tlKCdzZXQnLCB7ICdkYXRhU2V0JzogZmFsc2UgfSk7XG4gICAgfSxcblxuICAgIGdldFN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9LFxuXG4gICAgZ2V0U2xpZGVDb2xsZWN0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzbGlkZUNvbGxlY3Rpb247XG4gICAgfVxuICB9O1xufSkodGhpcy5fLCB0aGlzLkJhY2tib25lKTtcbiIsIihmdW5jdGlvbiAoXywgQmFja2JvbmUsIFN3aXBlKSB7XG4gIC8vIHRoZSBtZWF0IG9mIHRoZSBsb2dpYywgZGVmaW5lcyB0aGUgc2xpZGVzaG93LCBob29rcyBpbnRvIGV4aXN0aW5nIGRvbSBlbGVtZW50cyByZXByZXNlbnRpbmcgc2xpZGVzIGFuZCBjb250cm9sc1xuICAvLyBoYW5kbGVzIGV2ZW50cyBhbmQgdGltaW5nLCBwbGF5LCBwYXVzZSwganVtcHRvXG5cbiAgQVBQLlZpZXdzLlNsaWRlc2hvdyA9IEJhY2tib25lLlZpZXcuZXh0ZW5kKHtcblxuICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICB0aGlzLnRpbWVTZXQgPSBvcHRpb25zLnRpbWVTZXQ7XG4gICAgICB0aGlzLnRlbXBsYXRlTmFtZSA9IG9wdGlvbnMudGVtcGxhdGVOYW1lO1xuICAgICAgdGhpcy5oYW5kbGUgPSBvcHRpb25zLmhhbmRsZTtcblxuICAgICAgdGhpcy5yZW5kZXIoKTtcblxuICAgICAgdGhpcy5saXN0ZW5UbyhBUFAuU3RvcmUuZ2V0U3RhdGUoKSwgJ2NoYW5nZTphY3RpdmVJbmRleCcsIHRoaXMuc2xpZGUpO1xuICAgICAgdmFyIHJhbmRvbUluZGV4ID0gKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuY29sbGVjdGlvbi5sZW5ndGggLSAxKSlcbiAgICAgIEFQUC5TdG9yZS5nZXRTdGF0ZSgpLnNldCgnYWN0aXZlSW5kZXgnLCByYW5kb21JbmRleCk7XG5cbiAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215U3dpcGUnKTtcbiAgICAgIHdpbmRvdy5teVN3aXBlID0gU3dpcGUoZWxlbSwge1xuICAgICAgICBzdGFydFNsaWRlOiByYW5kb21JbmRleCxcbiAgICAgICAgYXV0bzogdGhpcy50aW1lU2V0LFxuICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oaW5kZXgsIGVsZW0pIHtcbiAgICAgICAgICBBUFAuU3RvcmUuZ2V0U3RhdGUoKS5zZXQoJ2FjdGl2ZUluZGV4JywgaW5kZXgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIEFQUC5Zb3VUdWJlLnlvdXR1YmVQbGF5ZXJbNDBdLnBsYXlWaWRlbygpO1xuXG4gICAgICB0aGlzLmJpbmRzKCk7XG4gICAgfSxcblxuICAgIGJpbmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIF8uYmluZEFsbCh0aGlzLCAna2V5RG93bicpO1xuICAgICAgJChkb2N1bWVudCkub24oJ2tleWRvd24nLCB0aGlzLmtleURvd24pO1xuICAgIH0sXG5cbiAgICBrZXlEb3duOiBmdW5jdGlvbiAoZXYpIHtcbiAgICAgIHN3aXRjaCAoZXYua2V5Q29kZSkge1xuICAgICAgICBjYXNlIDM3OlxuICAgICAgICBjYXNlIDc1OlxuICAgICAgICAgIHdpbmRvdy5teVN3aXBlLnByZXYoKVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDM4OlxuICAgICAgICAgIHRoaXMuc3RvcFRpbWVyU2xpZGUoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgY2FzZSA3NDpcbiAgICAgICAgICB3aW5kb3cubXlTd2lwZS5uZXh0KClcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICB0aGlzLnN0b3BUaW1lclNsaWRlKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHNsaWRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgbmV4dDtcbiAgICAgIHZhciBwcmV2O1xuICAgICAgdmFyIGFjdGl2ZSA9IEFQUC5TdG9yZS5nZXRTdGF0ZSgpLmdldCgnYWN0aXZlSW5kZXgnKTtcbiAgICAgIHZhciBzbGlkZXNMZW5naHQgPSB0aGlzLmNvbGxlY3Rpb24ubGVuZ3RoO1xuXG4gICAgICBpZiAoYWN0aXZlID09PSBzbGlkZXNMZW5naHQpIHtcbiAgICAgICAgYWN0aXZlID0gMDtcbiAgICAgIH0gZWxzZSBpZiAoYWN0aXZlID09PSAtMSkge1xuICAgICAgICBhY3RpdmUgPSAoc2xpZGVzTGVuZ2h0IC0gMSk7XG4gICAgICB9XG5cbiAgICAgIEFQUC5TdG9yZS5nZXRTdGF0ZSgpLnNldCgnYWN0aXZlSW5kZXgnLCBhY3RpdmUsIHtcbiAgICAgICAgc2lsZW50OiB0cnVlLFxuICAgICAgfSlcblxuICAgICAgaWYgKGFjdGl2ZSA9PT0gKHNsaWRlc0xlbmdodCAtIDEpKSB7XG4gICAgICAgIG5leHQgPSAwO1xuICAgICAgICBwcmV2ID0gYWN0aXZlIC0gMTtcbiAgICAgIH0gZWxzZSBpZiAoYWN0aXZlID09PSAwKSB7XG4gICAgICAgIHByZXYgPSAoc2xpZGVzTGVuZ2h0IC0gMSk7XG4gICAgICAgIG5leHQgPSBhY3RpdmUgKyAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dCA9IGFjdGl2ZSArIDE7XG4gICAgICAgIHByZXYgPSBhY3RpdmUgLSAxO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkVsID0gdGhpcy4kZWwuZmluZCgnW2RhdGEtaWQ9XCInICsgcHJldiArICdcIl0nKTtcbiAgICAgIGlmKCF0aGlzLmNvbGxlY3Rpb24uZ2V0KHByZXYpLmdldCgnZGF0YVNldCcpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdwcmV2JywgcHJldik7XG4gICAgICAgIHRoaXMuYWRkQ29udGVudFRvVGVtcGxhdGUocHJldkVsLCBwcmV2KTtcbiAgICAgICAgaWYodGhpcy5oYW5kbGUgPT09ICdib2xjb21yZWNsYW1lcycpIHtcbiAgICAgICAgICBhZGRQbGF5ZXIocHJldiwgdGhpcy5jb2xsZWN0aW9uLmdldChwcmV2KS5nZXQoJ3VybCcpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbGxlY3Rpb24uZ2V0KHByZXYpLnNldCgnZGF0YVNldCcsIHRydWUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgYWN0aXZlRWwgPSB0aGlzLiRlbC5maW5kKCdbZGF0YS1pZD1cIicgKyBhY3RpdmUgKyAnXCJdJyk7XG4gICAgICBpZighdGhpcy5jb2xsZWN0aW9uLmdldChhY3RpdmUpLmdldCgnZGF0YVNldCcpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdhY3RpdmUnLCBhY3RpdmUpO1xuICAgICAgICB0aGlzLmFkZENvbnRlbnRUb1RlbXBsYXRlKGFjdGl2ZUVsLCBhY3RpdmUpO1xuICAgICAgICBpZih0aGlzLmhhbmRsZSA9PT0gJ2JvbGNvbXJlY2xhbWVzJykge1xuICAgICAgICAgIGFkZFBsYXllcihhY3RpdmUsIHRoaXMuY29sbGVjdGlvbi5nZXQoYWN0aXZlKS5nZXQoJ3VybCcpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbGxlY3Rpb24uZ2V0KGFjdGl2ZSkuc2V0KCdkYXRhU2V0JywgdHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBuZXh0RWwgPSB0aGlzLiRlbC5maW5kKCdbZGF0YS1pZD1cIicgKyBuZXh0ICsgJ1wiXScpO1xuICAgICAgaWYoIXRoaXMuY29sbGVjdGlvbi5nZXQobmV4dCkuZ2V0KCdkYXRhU2V0JykpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ25leHQnLCBuZXh0KTtcbiAgICAgICAgdGhpcy5hZGRDb250ZW50VG9UZW1wbGF0ZShuZXh0RWwsIG5leHQpO1xuICAgICAgICBpZih0aGlzLmhhbmRsZSA9PT0gJ2JvbGNvbXJlY2xhbWVzJykge1xuICAgICAgICAgIGFkZFBsYXllcihuZXh0LCB0aGlzLmNvbGxlY3Rpb24uZ2V0KG5leHQpLmdldCgndXJsJykpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29sbGVjdGlvbi5nZXQobmV4dCkuc2V0KCdkYXRhU2V0JywgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmKHRoaXMuaGFuZGxlID09PSAnYm9sY29tcmVjbGFtZXMnKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKEFQUC5Zb3VUdWJlLnlvdXR1YmVQbGF5ZXJbYWN0aXZlXSk7XG4gICAgICAgIC8vIEFQUC5Zb3VUdWJlLnlvdXR1YmVQbGF5ZXJbcHJldl0uc3RvcFZpZGVvKCk7XG4gICAgICAgIC8vIEFQUC5Zb3VUdWJlLnlvdXR1YmVQbGF5ZXJbbmV4dF0uc3RvcFZpZGVvKCk7XG4gICAgICAgIC8vIEFQUC5Zb3VUdWJlLnlvdXR1YmVQbGF5ZXJbYWN0aXZlXS5wbGF5VmlkZW8oKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgZ2V0VGVtcGxhdGVEYXRhOiBmdW5jdGlvbihzbGlkZW5yKSB7XG4gICAgICB2YXIgZGF0YSA9IHRoaXMuY29sbGVjdGlvbi5nZXQoc2xpZGVucik7XG4gICAgICByZXR1cm4gZGF0YS50b0pTT04oKTtcbiAgICB9LFxuXG4gICAgYWRkQ29udGVudFRvVGVtcGxhdGU6IGZ1bmN0aW9uKGVsLCBzbGlkZW5yKSB7XG4gICAgICB2YXIgc291cmNlID0gJCh0aGlzLnRlbXBsYXRlTmFtZSkuaHRtbCgpO1xuICAgICAgdGhpcy50ZW1wbGF0ZSA9IEhhbmRsZWJhcnMuY29tcGlsZShzb3VyY2UpO1xuICAgICAgZWwuYXBwZW5kKHRoaXMudGVtcGxhdGUodGhpcy5nZXRUZW1wbGF0ZURhdGEoc2xpZGVucikpKTtcbiAgICB9LFxuXG4gICAgcmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc291cmNlID0gJCgnI3BsYWNlaG9sZGVyLXRlbXBsYXRlJykuaHRtbCgpO1xuICAgICAgdGhpcy50ZW1wbGF0ZSA9IEhhbmRsZWJhcnMuY29tcGlsZShzb3VyY2UpO1xuICAgICAgdGhpcy5jb2xsZWN0aW9uLmVhY2goZnVuY3Rpb24obW9kZWwpIHtcbiAgICAgICAgICB0aGlzLiRlbC5hcHBlbmQodGhpcy50ZW1wbGF0ZShtb2RlbC50b0pTT04oKSkpO1xuICAgICAgfSwgdGhpcyk7XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgfSk7XG5cbn0pKHRoaXMuXywgQmFja2JvbmUsIFN3aXBlKTtcbiIsInZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcblxudGFnLnNyYyA9IFwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vaWZyYW1lX2FwaVwiO1xudmFyIGZpcnN0U2NyaXB0VGFnID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdO1xuZmlyc3RTY3JpcHRUYWcucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGFnLCBmaXJzdFNjcmlwdFRhZyk7XG5BUFAuWW91VHViZS55b3V0dWJlUGxheWVyID0gW107XG5cbmZ1bmN0aW9uIGFkZFBsYXllcihzbGlkZU5yLCBpZCkge1xuICByZXR1cm4gQVBQLllvdVR1YmUueW91dHViZVBsYXllcltzbGlkZU5yXSA9IG5ldyBZVC5QbGF5ZXIoJ3lvdXR1YmUtcGxheWVyJyArIHNsaWRlTnIsIHtcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgICB2aWRlb0lkOiBpZCxcbiAgICBwbGF5ZXJWYXJzOiB7IFxuICAgICAgJ2F1dG9wbGF5JzogMCxcbiAgICAgICdjb250cm9scyc6IDAsXG4gICAgICAvLyAnZGlzYWJsZWtiJzogMSwgXG4gICAgICAncmVsJyA6IDAsXG4gICAgICAnZnMnIDogMCxcbiAgICB9LFxuICAgIGV2ZW50czoge1xuICAgICAgJ29uUmVhZHknOiBvblBsYXllclJlYWR5LFxuICAgICAgJ29uU3RhdGVDaGFuZ2UnOiBvblBsYXllclN0YXRlQ2hhbmdlXG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gb25QbGF5ZXJSZWFkeShldikge1xuICBjb25zb2xlLmxvZygnb25QbGF5ZXJSZWFkeScsIGV2LnRhcmdldC5wbGF5ZXJJbmZvLnZpZGVvRGF0YS52aWRlb19pZCk7XG4gIGlmKGV2LnRhcmdldC5wbGF5ZXJJbmZvLnZpZGVvRGF0YS52aWRlb19pZCA9PT0gQVBQLlN0b3JlLmdldFNsaWRlQ29sbGVjdGlvbigpLmdldChBUFAuU3RvcmUuZ2V0U3RhdGUoKS5nZXQoJ2FjdGl2ZUluZGV4JykpLmF0dHJpYnV0ZXMudXJsKSBldi50YXJnZXQucGxheVZpZGVvKCk7XG59XG5cbmZ1bmN0aW9uIG9uUGxheWVyU3RhdGVDaGFuZ2UoZXYpIHtcbiAgc3dpdGNoKGV2LmRhdGEpIHtcbiAgICBjYXNlIC0xOlxuICAgICBjb25zb2xlLmxvZygndmlkZW8gdW5zdGFydGVkJyk7XG4gICAgIGNvbnNvbGUubG9nKCdEdXJhdGlvbjonICsgZXYudGFyZ2V0LmdldER1cmF0aW9uKCkpO1xuICAgICBicmVhaztcbiAgICBjYXNlIDA6XG4gICAgICBjb25zb2xlLmxvZygndmlkZW8gZW5kZWQnKTtcbiAgICAgIHdpbmRvdy5teVN3aXBlLm5leHQoKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMTpcbiAgICAgIGNvbnNvbGUubG9nKCd2aWRlbyBwbGF5aW5nIGZyb20gJyArIGV2LnRhcmdldC5nZXRDdXJyZW50VGltZSgpKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMjpcbiAgICAgIGNvbnNvbGUubG9nKCd2aWRlbyBwYXVzZWQgYXQgJyArIGV2LnRhcmdldC5nZXRDdXJyZW50VGltZSgpKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMzpcbiAgICAgIGNvbnNvbGUubG9nKCd2aWRlbyBidWZmZXJpbmcnKTtcbiAgICBjYXNlIDU6XG4gICAgICBjb25zb2xlLmxvZygndmlkZW8gY3VlZCcpO1xuICAgIGRlZmF1bHQ6XG4gICAgICAvL2ZvY3VzIG9uIHVwcGVyIGVsZW1lbnQgaW5zdGVhZCBvZiBZb3VUdWJlIGlGcmFtZSB0aGF0IGNvbnRyb2xzIHRoZSB2aWRlbyBpbnN0ZWFkIG9mIHRoZSBzbGlkZXNob3dcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlTd2lwZVwiKS5mb2N1cygpO1xuICB9XG59XG4iXX0=
